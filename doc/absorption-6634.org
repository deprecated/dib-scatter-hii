#+options: ':nil *:t -:t ::t <:t H:3 \n:nil ^:{} arch:headline
#+options: author:t broken-links:nil c:nil creator:nil
#+options: d:(not "LOGBOOK") date:t e:t email:nil f:t inline:t num:t
#+options: p:nil pri:nil prop:nil stat:t tags:t tasks:t tex:t
#+options: timestamp:t title:t toc:t todo:t |:t
#+language: en
#+select_tags: export
#+exclude_tags: noexport

* Absorption at 6634 \AA in Orion Nebula
+ [[https://www.evernote.com/l/ACSenDsvfD1AsZwl6SJxcieZcyrDhIYlOVw][Public link to Evernote note]]

** Things still to do for paper
1. [ ] Finish theory of radiative transfer
   - Calculate expected brightness
   - Why is it so much higher in Orion S
   - Also, compare O^0 absorption with H^0 Raman absorption 
2. [X] Analysis of absorption line profile
   - How much can be done from MUSE data
   - Sort out the Keck lines
     - Find best spectra and co-add them
     - Determine width, shift, etc
3. [X] Use tetrablok algorithm on images
   - Make some nice figures
4. [ ] Make a figure of the O I fluorescence transitions (and maybe one showing Raman scattering too)
5. [ ] Extract a small region around 244-440
   - At full resolution on linux server
   - Do an analysis of this proplyd
   - Again, maybe for another paper where we can include the Keck spectra
6. [X] Make image of different extinction measurements
   - Scattered in green
   - Optically thick in red
   - Put screenshot in [[https://www.evernote.com/l/ACRuDljr2ktEsohBH1p0pHiM81GSFWLeIso][Evernote]]  
   - Or maybe punt to another paper
7. [ ] Remove continuum from [C I] line
8. [X] Look at Bally STIS spectra
   - See [[id:2E94DD95-D60A-4C3E-A5C8-5356F63901B9][Bally GO8324 - mainly UV but also optical of LV knots and HST10]]
   - Should have Ha spectra that include the wings
   - Maybe 50 km/s velocity resolution
   - No, these are none of them any good

** Relation to Raman-scattered wings of H\alpha
+ See Dopita:2016a
  + These are pumped by continuum or O I 1025.76, which is very close to Ly \beta 1025.72
    + Wavelength in H\alpha frame: 6562.79 + (1025.76 - 1025.72) 40.96 = 6564.4284
    + Redshifted by 3e5 (6564.4284 - 6562.79)/6562.79 = 75 km/s
  + Also, secondary component pumped by Si II 1023.70, which gives a peak at 6480.1
    + Test my understanding of scale factor
    + (1023.70 - 1025.72) 40.96 = -82.7392
    + 6562.79 - 82.7392 = 6480.05 QED
+ *This gives another possibility for the 6634 origin*
  + Could be a stellar absorption line just redward of Ly \beta
  + Raman scattering causes wavelength differences \Delta\lambda/\lambda from Ly \beta center (1025.72 \AA) to be mapped to differences 6.4 \Delta\lambda/\lambda from H\alpha line center
    - This is (1 - 1/9) / (1/4 - 1/9) = 6.4
    - This is factor for velocity shifts (\propto \Delta\lambda/\lambda), so for \Delta\lambda itself, the factor is squared: 40.96
    - So 6634 - 6563 = 70 \AA, so 70/40.96 = 1.709 \AA at Ly \beta => 1027.43 \AA (vacuum)
    - *I have solved the mystery!!!*
      - It is the 1027.43051 and 1027.43125 components of the O I resonance line
        - These are transitions from the J=1 level, which is 0.019622 eV above the ground (J=2) level, but it should be populated according to statistical weight so long as T > 0.019622 eV/k = 228 K
        - There is also a 1028.15710 component from the J=0 level, which should give a line at 6562.79 + (1028.15710 - 1025.72) 40.96 = 6662.613616
        - /Which is what I thought was Si III 6662.90 !!!/
        - Velocities in Ly\beta domain are +500 and +712 km/s 
          - And the J_1=2 triplet is [+12.2, +12.4, +12.7] km/s
          - Or around +80 km/s
        - All lines of multiplet
          #+begin_example
            -LAB-WAVL-ANG-VAC-|-DLAM--|SPC-|TT|----------CONFIGURATION----------|-TERM--|J_i-J_k|--A_ki--|-TPF-|--LEVEL-ENERGY--EV--|-REF---|
               1025.76161      9.4E-05  O I E1          2s2.2p4-2s2.2p3.(4So).3d  3P-3Do  2 - 3  7.40E+07    15 0.000000 - 12.087037 ASD
               1025.76256      9.4E-05  O I E1          2s2.2p4-2s2.2p3.(4So).3d  3P-3Do  2 - 2  1.84E+07    15 0.000000 - 12.087026 ASD
               1025.76330      9.4E-05  O I E1          2s2.2p4-2s2.2p3.(4So).3d  3P-3Do  2 - 1  2.05E+06    15 0.000000 - 12.087017 ASD
               1027.43051      9.4E-05  O I E1          2s2.2p4-2s2.2p3.(4So).3d  3P-3Do  1 - 2  5.52E+07    15 0.019622 - 12.087026 ASD
               1027.43125      9.4E-05  O I E1          2s2.2p4-2s2.2p3.(4So).3d  3P-3Do  1 - 1  3.06E+07    15 0.019622 - 12.087017 ASD
               1028.15710      9.4E-05  O I E1          2s2.2p4-2s2.2p3.(4So).3d  3P-3Do  0 - 1  4.08E+07    15 0.028142 - 12.087017 ASD
          #+end_example
      - What is the observed width of the O I lines, and what do they correspond to in the FUV domain?
        - FWHM is about 4.5 pix or 3.8 \AA, as opposed to 3 pix = 2.5 \AA for the emission lines
          - FWZI is 9.5 as opposed to 6 pixels
        - This is 174 km/s as opposed to 114 km/s, so this gives a instrument-corrected width of 130 km/s \to 20 km/s in FUV
        - This is very broad and can't be thermal or even non-thermal kinematic
        - Must be due to line-center \tau \gg 1, so could use a curve of growth on the EW
        - Also, this means that residual emission at line center is giving us the line-center source function!
  + Possible lines in blue wing:
    + /I don't actually believe any of these/
      + More plausible that they are gaps between emission lines
    + 6494.75 \to 1025.72 + (6494.75 - 6562.79)/40.96 = 1024.06
      + There is S I at 1023.91, which should give 6562.79 + (1023.91 - 1025.72) 40.96 = 6488.65
        + But that is not close enough
      + Si II at 1020.6989 and 1023.7001
        + 6357.13, 6480.05
        + The 6480.05 line /might/ be detected, but the absorption looks to be centered on 6481.15, which would be 0.01 \AA redder in FUV, whereas claimed wavelength accuracy is 0.0007 \AA
      + Fe II] intercombination line at 1024.14514 (no A-value given) \to 6498.3 \AA
        + Does correspond to a weak but consistent dip
        + Although we can't rule out weak optical emission lines
    + If the dips are just gaps between emission lines, then the lines are
      + 6533 - [Ni III] 6533.76 
      + 6527.9 - [N II] 6527.24
      + 6521.1 weak/broad
      + 6516 very weak
      + 6510.9 mainly ionized (maybe O II)
      + 6505.8 also mainly ionized
      + 6501.55 (maybe O II)
      + 6498.15 SKY definitely - this is what makes it look like 
      + 6470.1 SKY
      + 6465 SKY - not to be confused with strong 6462 C II
  + One more in the red wing
    + 6708.5 \to 1025.72 + (6708.5 - 6562.79)/40.96 = 1029.28 \AA
    + Strong in Orion S on side near Trapezium
    + Weak in Bar region
    + Could be Cl I 1029.34325
    + But this should also give 1028.17391 \to 6663.3 \AA, which is almost on top of the red component of the O I multiplet so would be hidden
    + Variation with position might be due to Cl II being dominant in Bar (density effect on Cl^+/Cl^0 ratio)
  + The near wings - are they real?
    + I am not sure
    + There is a flat bit in the spectrum from 6569 \to 6574
      + \Delta\lambda = +6 \to +11 \AA or V = +275 \to +500 km/s
    + And again from 6554 \to 6557
      + \Delta\lambda = -9 \to -6 or V = -275 \to -410 km/s
    + There seems to be a slight change with position, at the Bar at least
      + Smaller \Delta\lambda comes from more ionized regions
      + This is what we expect because the larger cross section closer to line center implies \tau = 1 comes from a smaller column
      + \Delta\lambda = 10 \AA @ H\alpha means 
  + There is O VI doublet at 1037.62, 1031.93 but this is a very strong P Cygni profile that absorbs everything up to and past the Ly \beta line
    + See Fig 23 of Leitherer:2010a, which shows population synthesis spectra
    + There is a lot of H_2 (and C II, O I) absorption between 1035 \to 1040, which makes this hard to see on the observed FUSE spectra, see Fig 20 of Pellerin:2002a
    + Inside the nebula, things will be very different since some of these lines could be in emission instead of absorption
      + [ ] *run Cloudy model* to see if we can get predicted spectrum in PDR
        - See what we have got from the [[file:~/Dropbox/cloudy-dust-charging/cloudy-dust-charging.org][cloudy-dust-charging]] project
    + This is mentioned in Luridiana:2009a
    + But note that the difference between O VI and Ly\beta is 1031.93 - 1025.72 = 6.21 \AA, which corresponds to 1800 km/s, whereas velocity of thC wind is only 1200 km/s
      + So it doesn't get all the way to H\beta - the blue edge will be at 1031.93 (1 - 1200/3e5) = 1027.8 \AA
      + In the H\alpha domain this is 6562.79 + (1027.8 - 1025.72) 40.96 = 6648 \AA
      + Check using more accurate equation
        + \lambda_2 = 1/(1/6564.533 + 1/1027.8 - 1/1025.72) = 6650.67 vacuum, or 6649 air
        + \Delta \lambda_2 = 6650.67 - 6564.533 = 86.14 \AA, smack in the middle of the R087 band
      + So it is somewhat strange to see no evidence for this in the Raman spectrum
      + Rest wavelength of O VI absorption: 1037.62, 1031.93
        + \lambda_2 = 1/(1/6564.533 + 1/1037.62 - 1/1025.72) = 7084.41
        +  \lambda_2 = 1/(1/6564.533 + 1/1031.93 - 1/1025.72) = 6827.57
+ Look at variation of the raman wings, and correlations with 6634 absorption
+ Given that Dopita has narrower line than us, it might absorb more than just the Raman pseudo-continuum



*** Look at the spectrum from existing Cloudy models
#+name: make-cloudy-fuv-spectrum
#+header: :var PREFIX="dustrad-n00-MS40"
#+BEGIN_SRC python :return pltfile :results file
  import sys
  import numpy as np
  from matplotlib import pyplot as plt
  import seaborn as sns
  from astropy.table import Table
  from astropy import units as u
  from astropy.constants import k_B
  CLOUDYDIR = "/Users/will/Dropbox/cloudy-dust-charging"
  sys.path.append(CLOUDYDIR) 
  from cloudytab import CloudyModel

  pltfile = f'cloudy-fuv-spectrum-{PREFIX}.pdf'
  m = CloudyModel(f'{CLOUDYDIR}/models/{PREFIX}')

  fig, ax = plt.subplots()

  nu = m.data['cont']['Cont  nu']
  wav = 912.0/nu
  nuFnu_inc = m.data['cont']['incident'] / wav  # Col 2
  nuFnu_trans = m.data['cont']['trans'] / wav   # Col 3
  nuFnu_tot = m.data['cont']['total'] / wav     # Col 7
  vmax = nuFnu_inc.max()
  ax.plot(wav, nuFnu_inc)
  ax.plot(wav, nuFnu_tot, lw=0.6)
  ax.plot(wav, nuFnu_trans, lw=0.3)

  ax.set(
      xlim=[800.0, 1500.0],
      ylim=[0, 1.3*vmax],
      xlabel='Wavelength, Angstrom',
      ylabel=r'$F_{\lambda}$',
  )

  fig.savefig(pltfile)

#+END_SRC

#+RESULTS: make-sed
[[file:cloudy-fuv-spectrum-dustrad-n00-MS40.pdf]]

**** Conclusions based on Cloudy model spectra
+ The ~dustrad~ models all stop at 4000 K, so just on neutral side of i-front
+ There are a variety of column densities, depending on the ionization parameter (proportional to (Q n)^{1/3})
+ Lines are not properly resolved in the output - look like triangles
+ Ly\alpha is seen in emission in the ~total~ spectrum, which is transmitted plus reflected
+ Ly\beta is in absorption in all spectra
  + Absorption depth seems slightly less in transmitted and total spectra
  + 1025.72 \AA = 0.889 Ryd
  + The reddest O I component is at 1028.16 = 0.887 Ryd
  + The Cloudy continuum mesh points are at [..., 0.8850, 0.8880, 0.8909, ...]
    + [..., 1024, 1027, 1030, ...] in \AA
  + This corresponds to resolving power R = 1025/(2 3) = 171 so clearly insufficient to see details in spectrum
  + We need to use the ~Save fine continuum [range, merge]~ command to see it better
    + Fine continuum has R = 1.737e+05, or 1.7 km/s, which would be 10.9 km/s at H\alpha, which is plenty fine enough
+ Continuum across Ly\beta rises to red, but only 10% in 50\AA
+ Stellar emission line at about 1045 \AA = 0.87 Ryd
+ Important caveat from Hazy
  : In general the treatment of scattering is very geometry dependent. The output produced by the save continuum commands does not include the pumped part of the line contribution. This is correct if the continuum source is included in the beam, but is not if only the gas is observed.
  + This is because absorption and emission cancel out when integrated over the line profile
  + So I think it is OK in our case, since the spectrum as seen by the neutral gas /does/ include the transmitted stellar continuum
+ 


**** TODO [#A] Run more cloudy models
+ Save fine continuum (see above)
+ Stop at various depths
+ Dig out atmosphere models for Trapezium
**** Further spectra for different models
#+call: make-cloudy-fuv-spectrum("dustrad-n02-MS40")

#+RESULTS:
[[file:cloudy-fuv-spectrum-dustrad-n02-MS40.pdf]]

#+call: make-cloudy-fuv-spectrum("dustrad-n03-MS40")

#+RESULTS:
[[file:cloudy-fuv-spectrum-dustrad-n03-MS40.pdf]]

#+call: make-cloudy-fuv-spectrum("dustrad-n04-MS40")

#+RESULTS:
[[file:cloudy-fuv-spectrum-dustrad-n04-MS40.pdf]]


#+call: make-cloudy-fuv-spectrum("dustrad-n02-MS20")

#+RESULTS:
[[file:cloudy-fuv-spectrum-dustrad-n02-MS20.pdf]]

#+call: make-cloudy-fuv-spectrum("dustrad-n04-MS20")

#+RESULTS:
[[file:cloudy-fuv-spectrum-dustrad-n04-MS20.pdf]]

#+call: make-cloudy-fuv-spectrum("dustrad-n02-MS10")

#+RESULTS:
[[file:cloudy-fuv-spectrum-dustrad-n02-MS10.pdf]]

#+call: make-cloudy-fuv-spectrum("dustrad-n04-MS10")

#+RESULTS:
[[file:cloudy-fuv-spectrum-dustrad-n04-MS10.pdf]]

#+call: make-cloudy-fuv-spectrum("dustrad-n04-BSG")

#+RESULTS:
[[file:cloudy-fuv-spectrum-dustrad-n04-BSG.pdf]]

#+call: make-cloudy-fuv-spectrum("shell-R001-n27-LP_Ori20Bz5")

#+RESULTS:
[[file:cloudy-fuv-spectrum-shell-R001-n27-LP_Ori20Bz5.pdf]]

#+call: make-cloudy-fuv-spectrum("shell-R003-n47-th1D-L25-triple-AV5")

#+RESULTS:
[[file:cloudy-fuv-spectrum-shell-R003-n47-th1D-L25-triple-AV5.pdf]]


*** Correlation between 6634 and Raman wings for Orion
+ Choose suitable ranges - use the 8x8 binned cube
+ Regions free of any strong lines:
  + 6410 \to 6450 \AA = 31 \to 78 pix
  + 6760 \to 6810 \AA = 442 \to 502 pix (some C II lines but super weak)
  + [ ] Maybe we could divide each continuum range in two to give 4 sections, and take median of each
    + This would be insensitive to absorption or emission lines as long as there are not too many of them
    + Then fit quadratic through the 4 points
+ Regions for Red Raman wing
  + 6600 \to 6629 \AA = 253 \to 289 pix (width 37)
  + 6638 \to 6656 \AA = 290 \to 320 pix (width 29)
  + First attempt, just sum these
  + [ ] Fit a quadratic through these
+ Region for the 6634 \AA absorption line
  + 6631 \to 6638 \AA = 290 \to 298 pix (width 9)
+ Blue Raman wing
  + Weak OH Sky lines
    + 6499
    + 6505
  + Real nebular lines
    + [N II] 6527
    + [Ni III] 6534


**** Lines found in the wavsec3 cube
+ [Ni III] 6401.5
  + HH 202 and 203 strong on blue flank
  + Maybe a Ne I 6402.25 blend, but it doesn't really look like it
+ Perhaps something like [Fe II] at 6401, but exceedingly weak
+ High ionization line at 6457 - very weak
+ [C II] 6461.95 - nice and strong
  + Shows the inner shell nicely on the red flank
+ [N II] 6527
+ [Ni III] 6533
**** DONE Concatenate wavsec 2 and wavsec 3
CLOSED: [2019-09-04 Wed 12:24]
+ [2019-09-01 Sun] It turns out that the region I had used for continuum was not good
  + On the blue side of the line, the 6400 to 6450 range is still in the Raman wings according to the Dopita spectrum
+ So we need to go out to the 6050 to 6150 range to get a good continuum
  + And this is in wavsec 4
+ I can just use the WCS from wavsec 2

#+begin_src python :tangle ../src/concat-wavsecs.py
  import sys
  import numpy as np
  from astropy.io import fits

  try:
      DATADIR = sys.argv[1]
      SUFFIX = sys.argv[2]
      OUTDIR = sys.argv[3]
  except IndexError:
      sys.exit(f"Usage: {sys.argv[0]} DATADIR SUFFIX OUTDIR")


  hdu2 = fits.open(f"{DATADIR}/muse-hr-data-wavsec2{SUFFIX}.fits")["DATA"]
  hdu3 = fits.open(f"{DATADIR}/muse-hr-data-wavsec3{SUFFIX}.fits")["DATA"]

  hdu2.data = np.concatenate([hdu2.data, hdu3.data], axis=0)

  hdu2.writeto(f"{OUTDIR}/muse-hr-data-wavsec23{SUFFIX}.fits")


#+end_src

#+name: concat-wavsecs
#+header: :var DATADIR="/Users/will/Dropbox/OrionMuse/BigFiles"
#+header: :var SUFFIX="-rebin16x16"
#+header: :var OUTDIR="../data/orion-muse"
#+begin_src sh
python ../src/concat-wavsecs.py $DATADIR $SUFFIX $OUTDIR
#+end_src

#+RESULTS: concat-wavsecs
***** DONE Now we need to do this on the server for the full res cubes
CLOSED: [2019-09-04 Wed 12:24]

**** Remove continuum from cube
+ [2019-09-01 Sun] This is revisited to use a broader range - see above
+ Also, write scripts to python files and use shell commands to run them
+ Take opportunity to use wavelengths instead of array indices

#+begin_src python :tangle ../src/subtract-continuum.py :eval no
  import sys
  import numpy as np
  from astropy.io import fits
  from astropy.wcs import WCS
  from numpy.polynomial import Chebyshev as T
  import itertools

  try:
      DATADIR = sys.argv[1]
      SUFFIX = sys.argv[2]
      OUTDIR = sys.argv[3]
  except IndexError:
      sys.exit(f"Usage: {sys.argv[0]} DATADIR SUFFIX OUTDIR")

  infile = f"muse-hr-data-wavsec23{SUFFIX}.fits"
  hdu = fits.open(f"{DATADIR}/{infile}")["DATA"]
  w = WCS(hdu)
  nwav, ny, nx = hdu.data.shape
  wavpix = np.arange(nwav)

  # Two pairs of adjacent sections for the true continuum

  # Wavelength sections of clean continuum
  clean_sections = [
      [6070.0, 6140.0], [6170.0, 6225.0], # to the blue
      [6760.0, 6790.0], [6790.0, 6820.0], # to the red
  ]

  cont_slices = []
  for wavs in clean_sections:
      wavs = 1e-10*np.array(wavs)
      _, _, wpix = w.world_to_pixel_values([0, 0], [0, 0], wavs)
      cont_slices.append(slice(*wpix.astype(int)))


  # Use median over each section to avoid weak lines
  cont_maps = np.array([np.median(hdu.data[_, :, :], axis=0) for _ in cont_slices])
  cont_wavpix = np.array([np.median(wavpix[_], axis=0) for _ in cont_slices])
  # Inefficient but simple algorithm - loop over spaxels
  bgdata = np.empty_like(hdu.data)
  for j, i in itertools.product(range(ny), range(nx)):
      # Fit polynomial to BG
      try:
          p = T.fit(cont_wavpix, cont_maps[:, j, i], deg=2)
          # and fill in the BG spectrum of this spaxel
          bgdata[:, j, i] = p(wavpix)
      except:
          bgdata[:, j, i] = np.nan



  for suffix, cube in [
          ["cont", bgdata],
          ["cont-sub", hdu.data - bgdata],
          # ["cont-div", hdu.data/bgdata],
  ]:
      outfile = infile.replace(".fits", f"-{suffix}.fits")
      fits.PrimaryHDU(header=hdu.header, data=cube).writeto(
          f"{OUTDIR}/{outfile}", overwrite=True)
      print(f"Written {outfile}")
#+end_src

#+name: subtract-cont
#+header: :var DATADIR="../data/orion-muse"
#+header: :var SUFFIX="-rebin16x16"
#+header: :var OUTDIR="../data/orion-muse"
#+begin_src sh :results verbatim
python ../src/subtract-continuum.py $DATADIR $SUFFIX $OUTDIR
#+end_src

#+RESULTS: subtract-cont
: Written muse-hr-data-wavsec23-rebin16x16-cont.fits
: Written muse-hr-data-wavsec23-rebin16x16-cont-sub.fits

Now do same for 5x5 cube

#+call: subtract-cont(DATADIR="/Users/will/Dropbox/OrionMuse", INFILE="muse-hr-data-wavsec3-rebin05x05.fits")

#+RESULTS:
: None

And for the unbinned cube, which we are keeping out of Dropbox

#+call: subtract-cont(DATADIR="/Users/will/Work/Muse-Hii-Data/M42", INFILE="muse-hr-data-wavsec3.fits", OUTDIR="/Users/will/Work/Muse-Hii-Data/M42")

#+RESULTS:
: None

That was a mistake to run in emacs - took 90 minutes!
**** Send scripts to linux server and run them there
#+begin_src sh :results verbatim
rsync -avzP ../src/*.py nil:/fs/nil/other0/will/orion-muse
#+end_src

#+RESULTS:
: sending incremental file list
: extract-ci-8727.py
:             519 100%    0.00kB/s    0:00:00              519 100%    0.00kB/s    0:00:00 (xfr#1, to-chk=4/7)
: 
: sent 581 bytes  received 40 bytes  177.43 bytes/sec
: total size is 8,542  speedup is 13.76

Had to install python 3.7 since old one was on 3.3!

#+begin_src sh :eval no
time python concat-wavsecs.py . "" .
#+end_src

This took 90 sec

#+begin_src sh :eval no
time python subtract-continuum.py . "" .
#+end_src

That took 25 min. And I had to trap exceptions in the polynomial fit. 

Now to do the band maps. Still do it on the server, since I don't want a 22GB file here. 

#+begin_src sh :eval no
time python extract-raman-bands.py . "" .
#+end_src

Copy files back here:
#+begin_src sh :dir ../data/orion-muse :results verbatim
rsync -avzP nil:/fs/nil/other0/will/orion-muse/muse-hr-data-ha-raman-*.fits .
#+end_src

#+RESULTS:
: receiving incremental file list
: 
: sent 11 bytes  received 361 bytes  148.80 bytes/sec
: total size is 125,176,320  speedup is 336,495.48

[2019-09-04 Wed] Do the [C I] line stuff on the full resolution cube. 

#+begin_src sh :eval no
time python subtract-continuum.py-8700.py . "" .
#+end_src

#+begin_src sh :eval no
time python extract-ci-8727.py . "" .
#+end_src

#+begin_src sh :dir ../data/orion-muse :results verbatim
rsync -avzP nil:/fs/nil/other0/will/orion-muse/linesum-blue-C_I-8727*.fits .
#+end_src

#+RESULTS:
: receiving incremental file list
: linesum-blue-C_I-8727.fits
:               0   0%    0.00kB/s    0:00:00       10,434,240 100%  207.31MB/s    0:00:00 (xfr#1, to-chk=0/1)
: 
: sent 19,452 bytes  received 884 bytes  5,810.29 bytes/sec
: total size is 10,434,240  speedup is 513.09


**** Remove continuum from wavsec6 for the [C I] 8727.13 line
+ Minima in spectra where we can estimate the continuum
  + 606, 8689.45
  + 618, 8699.65
  + 646, 8723.45
  + 670, 8743.85
  + FITS pixel convention, so subtract 1 for python
+ Take the average of these 4, since not much to be gained from a linear fit
#+begin_src python :tangle ../src/subtract-continuum-8700.py :eval no
  import sys
  import numpy as np
  from astropy.io import fits

  try:
      DATADIR = sys.argv[1]
      SUFFIX = sys.argv[2]
      OUTDIR = sys.argv[3]
  except IndexError:
      sys.exit(f"Usage: {sys.argv[0]} DATADIR SUFFIX OUTDIR")

  infile = f"muse-hr-data-wavsec6{SUFFIX}.fits"
  hdu = fits.open(f"{DATADIR}/{infile}")["DATA"]

  # wave indices for estimating continuum
  kcont = [605, 617, 645, 669]

  cont = np.nanmean(hdu.data[kcont, :, :], axis=0, keepdims=True)
  hdu.data -= cont

  outfile = infile.replace(".fits", "-cont-sub.fits")
  hdu.writeto(f"{OUTDIR}/{outfile}", overwrite=True)

  print(f"Written {outfile}")
#+end_src

#+name: subtract-cont-8700
#+header: :var DATADIR="../../OrionMuse/Bigfiles"
#+header: :var SUFFIX="-rebin16x16"
#+header: :var OUTDIR="../data/orion-muse"
#+begin_src sh :results verbatim
python ../src/subtract-continuum-8700.py $DATADIR $SUFFIX $OUTDIR
#+end_src

#+RESULTS: subtract-cont-8700
: Written muse-hr-data-wavsec6-rebin16x16-cont-sub.fits

#+call: subtract-cont-8700(DATADIR="../../OrionMuse", SUFFIX="-rebin05x05")

#+RESULTS:
: Written muse-hr-data-wavsec6-rebin05x05-cont-sub.fits

Extract the blue half of the [C I] 8727.13 line.  The red half is contaminated by [Fe III] 8728.90 and N I 8728.90.  Eduardo has them at about 20% of the [C I] intensity. Use pixels 649, 650, 651, 652 (8726.0 \to 8728.55 \AA) since in 653 you start to see N I and [Fe III]

#+begin_src python :tangle ../src/extract-ci-8727.py :eval no
  import sys
  import numpy as np
  from astropy.io import fits

  try:
      DATADIR = sys.argv[1]
      SUFFIX = sys.argv[2]
      OUTDIR = sys.argv[3]
  except IndexError:
      sys.exit(f"Usage: {sys.argv[0]} DATADIR SUFFIX OUTDIR")

  infile = f"muse-hr-data-wavsec6{SUFFIX}-cont-sub.fits"
  hdu = fits.open(f"{DATADIR}/{infile}")["DATA"]

  line = np.nanmean(hdu.data[648:652, :, :], axis=0)
  hdu.data = line

  outfile = f"linesum-blue-C_I-8727{SUFFIX}.fits"
  hdu.writeto(f"{OUTDIR}/{outfile}", overwrite=True)

  print(f"Written {outfile}")
#+end_src

#+name: extract-ci-8727
#+header: :var DATADIR="../data/orion-muse"
#+header: :var SUFFIX="-rebin05x05"
#+header: :var OUTDIR="../data/orion-muse"
#+begin_src sh :results verbatim
python ../src/extract-ci-8727.py $DATADIR $SUFFIX $OUTDIR
#+end_src

#+RESULTS: extract-ci-8727
: Written linesum-blue-C_I-8727-rebin05x05.fits


**** Plot the spectrum of different regions
+ When did we last use astropy.regions?
  + Turns out to be for sigma Ori
  + Need to use ~mask = skyregion.to_pixel(WCS).to_mask().to_image(SHAPE)~
+ Use the 5x5 image to make it faster
+ Save the cont-subtracted and cont spectra to a json file
#+begin_src python :return jsonfile :results file
  import json
  import numpy as np
  import astropy.coordinates as coord
  from astropy.wcs import WCS
  from astropy.io import fits
  import regions as rg

  regions = rg.read_ds9("../data/raman-extract-boxes.reg")

  hdu = fits.open("../data/orion-muse/muse-hr-data-wavsec23-rebin16x16-cont-sub.fits")["DATA"]
  chdu = fits.open("../data/orion-muse/muse-hr-data-wavsec23-rebin16x16-cont.fits")["DATA"]

  spec = {}
  nz, ny, nx = hdu.data.shape
  w = WCS(hdu.header)
  _, _, waves = w.pixel_to_world_values([0], [0], np.arange(nz))
  for region in regions:
      mask = region.to_pixel(w.celestial).to_mask().to_image((ny, nx))
      label = region.meta["label"]
      spec[label] = {
          "wavelength": (1e10*waves).tolist(),
          "raman": np.sum(hdu.data*mask[None, :, :], axis=(1, 2)).tolist(),
          "continuum": np.sum(chdu.data*mask[None, :, :], axis=(1, 2)).tolist(),
          }

  jsonfile = "raman-orion-muse-1d-spectra.json"

  with open(jsonfile, "w") as f:
      json.dump(spec, f, indent=3)
#+end_src

#+RESULTS:
[[file:raman-orion-muse-1d-spectra.json]]


#+begin_src python :return figfile :results file
  import numpy as np
  import json
  from matplotlib import pyplot as plt
  import seaborn as sns

  jsonfile = "raman-orion-muse-1d-spectra.json"
  data = json.load(open(jsonfile))
  figfile = jsonfile.replace(".json", ".pdf")

  # Heliocentric correction
  V_HEL = -16.217273731
  # Heliocentric velocity of molecular cloud
  V_OMC = +9.0 + 19.1

  region_order = [
      "SW minibar",
      "Orion S",
      "E-W Bar",
      "Trap W",
      "Trap SW",
      "Bar",
  ]

  bands = {
      "B133": [6414.85, 6445.45],
      "B080": [6469.25, 6496.45],
      "B054": [6499.85, 6517.7],
      "B033": [6518.55, 6540.65],
      "R040": [6594.2, 6611.2],
      "R058": [6612.05, 6628.2],
      "R087": [6638.4, 6660.5],
      "R136": [6688.55, 6708.95],
  }

  strong_lines = {
      6562.79: r"H$\alpha$",
      6548.05: "[N II]",
      6583.45: "[N II]",
  }
  medium_lines = {
      6578.05: "C II",
      6678.15: "He I",
      6716.44: "[S II]",
      6730.816: "[S II]",
  }
  weak_lines = {
      6401.5: "[Ni III]",
      6501.4: "O II",
      6510.9: "O II",
      6461.95: "C II",
      6527.24: "[N II]",
      6533.8: "[Ni III]",
      # 6544.3: "?",
      6641: "[Cr IV]",
      6666.80: "[Ni II]",
      6699.39: "He I"
  }
  sky_lines = [6465, 6471, 6478, 6498.15, 6507, 6603]
  absorption_lines = {
      6633.347: "O I",
      6663.747: "O I",
  }

  fig, ax = plt.subplots(figsize=(10, 6))

  wavmin, wavmax = 6200, 6820
  offset = 0.75
  fc = 0.7
  for region in region_order:
      spec = data[region]
      waves = np.array(spec["wavelength"]) 
      # Put in OMC frame
      waves *= (1.0 - (V_OMC + V_HEL)/3e5)
      imin = np.sum(waves < wavmin)
      imax = np.sum(waves < wavmax)
      cont = np.array(spec["continuum"])
      total = cont + np.array(spec["raman"])
      waves = waves[imin:imax]
      cont = cont[imin:imax]
      total = total[imin:imax]
      norm = cont[0]
      cont /= norm
      total /= norm
      ax.fill_between(waves, cont + offset, total + offset, color=(fc, fc, fc))
      ax.plot(waves, cont + offset, color="k", lw=0.5, zorder=-100)
      ax.plot(waves, total + offset, color="k", lw=0.7)
      ax.annotate(region, (wavmax, cont[-1] + offset),
                  xytext=(5, 0), textcoords="offset points", ha="left", va="center")
      offset -= 0.15
      fc += 0.04

  # bandcolors = iter(sns.color_palette("coolwarm", len(bands)))
  # bandcolors = iter(sns.diverging_palette(220, 20, sep=1, n=len(bands), center="dark"))
  alphas = iter([0.2, 0.4, 0.4, 0.6, 0.6, 0.4, 0.4, 0.2])
  bandcolors = iter(["c", "c", "b", "b", "m", "m", "r", "r"])
  for band, [wav1, wav2] in bands.items():
      ax.axvspan(wav1, wav2, 0.2, 0.95, facecolor=next(bandcolors), alpha=next(alphas), zorder=-10)
      ax.text((wav1 + wav2)/2, 2.2, band, ha="center", fontsize="xx-small")

  for wave, label in strong_lines.items():
      ax.axvline(wave, 0.12, 0.8, color="k", lw=2, zorder=-5)
      ax.text(wave, 0.7, label, ha="center", va="top", rotation="vertical", fontsize="small")
  for wave, label in medium_lines.items():
      ax.axvline(wave, 0.15, 0.8, color="k", lw=1, zorder=-5)
      ax.text(wave, 0.8, label, ha="center", va="top", rotation="vertical", fontsize="x-small")
  for wave, label in weak_lines.items():
      ax.axvline(wave, 0.15, 0.85, color="k", lw=0.5, zorder=-5)
      ax.text(wave, 2.03, label, ha="center", va="bottom", rotation="vertical", fontsize="xx-small")

  for wave, label in absorption_lines.items():
      ax.axvline(wave, 0.08, 0.8, color="k", ls="--", lw=1, zorder=-5)
      ax.text(wave, 0.6, label, ha="center", rotation="vertical", fontsize="xx-small")

  for wave in sky_lines:
      # Sky line wavelengths need correcting from topocentric to OMC farme
      wave *= (1.0 - (V_OMC + V_HEL)/3e5)
      ax.axvline(wave, 0.15, 0.82, color="k", lw=1, ls=":", zorder=-5)
      ax.text(wave, 0.7, "sky", ha="center", rotation="vertical", fontsize="xx-small")


  ax.set(
      xlabel="STP Wavelength, Å (OMC frame)",
      ylabel="Relative Flux, $F_{\lambda} / F_{6200}$ + offset",
      # xlim=[wavmin, wavmax],
      ylim=[0.55, 2.25],
  )
  ax.minorticks_on()
  sns.despine(fig)
  fig.savefig(figfile)
#+end_src

#+RESULTS:
[[file:raman-orion-muse-1d-spectra.pdf]]

**** Make plot of (\Delta\lambda)^2 F_\lambda for the different regions
This is just like the previous figure, but with a restricted wavelength range and with the continuum removed

#+begin_src python :return figfile :results file
  import numpy as np
  import json
  from matplotlib import pyplot as plt
  import seaborn as sns

  jsonfile = "raman-orion-muse-1d-spectra.json"
  data = json.load(open(jsonfile))
  figfile = "raman-muse-spectra-times-lambda-squared.pdf"

  # Heliocentric correction
  V_HEL = -16.217273731
  # Heliocentric velocity of molecular cloud
  V_OMC = +9.0 + 19.1

  region_order = [
      "SW minibar",
      "Orion S",
      "E-W Bar",
      "Trap W",
      "Trap SW",
      "Bar",
  ]

  bands = {
      "B133": [6414.85, 6445.45],
      "B080": [6469.25, 6496.45],
      "B054": [6499.85, 6517.7],
      "B033": [6518.55, 6540.65],
      "R040": [6594.2, 6611.2],
      "R058": [6612.05, 6628.2],
      "R087": [6638.4, 6660.5],
      "R136": [6688.55, 6708.95],
  }

  strong_lines = {
      6562.79: r"H$\alpha$",
      6548.05: "[N II]",
      6583.45: "[N II]",
  }
  medium_lines = {
      6578.05: "C II",
      6678.15: "He I",
      6716.44: "[S II]",
      6730.816: "[S II]",
  }
  weak_lines = {
      6401.5: "[Ni III]",
      6501.4: "O II",
      6461.95: "C II",
      6527.24: "[N II]",
      6533.8: "[Ni III]",
      # 6544.3: "?",
      6641: "[Cr IV]",
      6666.80: "[Ni II]",
      6699.39: "He I"
  }
  sky_lines = [6465, 6471, 6478, 6498.15, 6507, 6603]
  absorption_lines = {
      6633.347: "O I",
      6663.747: "O I",
  }

  fig, ax = plt.subplots(figsize=(10, 6))

  wavmin, wavmax = 6410, 6710
  offset = 2.0
  fc = 0.7
  wav0 = 6562.74
  for region in region_order:
      spec = data[region]
      waves = np.array(spec["wavelength"]) 
      # Put in OMC frame
      waves *= (1.0 - (V_OMC + V_HEL)/3e5)
      imin = np.sum(waves < wavmin)
      imax = np.sum(waves < wavmax)
      i1 = np.sum(waves < bands["R087"][0])
      i2 = np.sum(waves < bands["R087"][1])
      total = np.array(spec["raman"])*(waves - wav0)**2
      norm = np.median(total[i1:i2])
      waves = waves[imin:imax] - wav0
      total = total[imin:imax]
      total /= norm
      ax.fill_between(waves, offset, total + offset, color=(fc, fc, fc))
      ax.plot(waves, total + offset, color="k", lw=0.7)
      ax.annotate(f"{offset:.1f} + {region}", (wavmax - wav0, offset + 1.0),
                  xytext=(5, 0), textcoords="offset points", ha="left", va="center")
      offset -= 0.4
      fc += 0.04

  wavmin -= wav0
  wavmax -= wav0
  # bandcolors = iter(sns.color_palette("coolwarm", len(bands)))
  # bandcolors = iter(sns.diverging_palette(220, 20, sep=1, n=len(bands), center="dark"))
  alphas = iter([0.2, 0.4, 0.4, 0.6, 0.6, 0.4, 0.4, 0.2])
  bandcolors = iter(["c", "c", "b", "b", "m", "m", "r", "r"])
  for band, [wav1, wav2] in bands.items():
      wav1 -= wav0
      wav2 -= wav0
      ax.axvspan(wav1, wav2, 0.2, 0.95, facecolor=next(bandcolors), alpha=next(alphas), zorder=-10)
      ax.text((wav1 + wav2)/2, 5.8, band, ha="center", fontsize="small")

  for wave, label in strong_lines.items():
      wave -= wav0
      if not wavmin < wave < wavmax:
          continue
      ax.axvline(wave, 0.08, 0.8, color="k", lw=2, zorder=-5)
      ax.text(wave, -0.6, label, ha="center", va="top", rotation="vertical", fontsize="small")
  for wave, label in medium_lines.items():
      wave -= wav0
      if not wavmin < wave < wavmax:
          continue
      ax.axvline(wave, 0.1, 0.8, color="k", lw=1, zorder=-5)
      ax.text(wave, -0.45, label, ha="center", va="top", rotation="vertical", fontsize="x-small")
  for wave, label in weak_lines.items():
      wave -= wav0
      if not wavmin < wave < wavmax:
          continue
      ax.axvline(wave, 0.1, 0.85, color="k", lw=0.5, zorder=-5)
      ax.text(wave, 5.0, label, ha="center", va="bottom", rotation="vertical", fontsize="xx-small")

  for wave, label in absorption_lines.items():
      wave -= wav0
      if not wavmin < wave < wavmax:
          continue
      ax.axvline(wave, 0.05, 0.8, color="k", ls="--", lw=1, zorder=-5)
      ax.text(wave, -0.98, label, ha="center", rotation="vertical", fontsize="xx-small")

  for wave in sky_lines:
      # Sky line wavelengths need correcting from topocentric to OMC farme
      wave *= (1.0 - (V_OMC + V_HEL)/3e5)
      wave -= wav0
      if not wavmin < wave < wavmax:
          continue
      ax.axvline(wave, 0.15, 0.82, color="k", lw=1, ls=":", zorder=-5)
      ax.text(wave, 4.75, "sky", ha="center", rotation="vertical", fontsize="xx-small")


  ax.set(
      xlabel=r"Wavelength difference from H$\alpha$: $\Delta\lambda_2$, Å",
      ylabel=r"offset + Compensated flux, $[(\Delta\lambda_2)^2\ (F_{\lambda}\ - F_{\mathrm{cont}})]\ /\ \langle  (\Delta\lambda_2)^2\ (F_{\lambda}\ - F_{\mathrm{cont}})\rangle_{\mathrm{R087}}$",
      # xlim=[wavmin, wavmax],
      ylim=[-1.1, 6.0],
  )
  ax.minorticks_on()
  sns.despine(fig)
  fig.tight_layout()
  fig.savefig(figfile)
#+end_src

#+RESULTS:
[[file:raman-muse-spectra-times-lambda-squared.pdf]]

**** Make a cube of (\Delta\lambda)^{2} F_{\lambda}
+ This should give a flat spectrum for Lorentzian wings
+ Should be able to spot any red-blue asymmetries better
+ And also see where the [N II] lines start to become important
+ For central wavelength, we can use the cluster velocity of 25 km/s heliocentric
  + Wave pixels are 0.85 \AA = 39 km/s @ H\alpha
  + The heliocentric correction is -16.2 km/s, but do we add or subtract?

#+name: dlam2-cube
#+header: :var REBIN="rebin16x16"
#+begin_src python
  import numpy as np
  from astropy.io import fits
  from astropy.wcs import WCS
  datadir = "../data/orion-muse"
  infile = f"muse-hr-data-wavsec23-{REBIN}-cont-sub.fits"
  hdu = fits.open(f"{datadir}/{infile}")["DATA"]


  wcs = WCS(hdu.header)

  nwav, ny, nx = hdu.data.shape
  wavpix = np.arange(nwav)
  _, _, waves = wcs.pixel_to_world_values([0]*nwav, [0]*nwav, wavpix)
  dlam = 1e10*waves - 6562.79*(1 + (25.0 - 16.2)/3e5)
  hdu.data *= dlam[:, None, None]**2
  outfile = infile.replace(".fits", "-Flam-dlam2.fits")
  hdu.writeto(f"{datadir}/{outfile}", overwrite=True)
#+end_src

#+RESULTS: dlam2-cube
: None

#+RESULTS:
: None

#+call: dlam2-cube("rebin05x05")

#+RESULTS:
: None

**** Calculate EW of 6634
#+name: ew-6634
#+header: :var REBIN="rebin16x16"
#+begin_src python
  import numpy as np
  from astropy.io import fits
  from astropy.wcs import WCS
  from numpy.polynomial import Chebyshev as T
  import itertools
  datadir = "../data/orion-muse"
  infile = f"muse-hr-data-wavsec3-{REBIN}-cont-sub-Flam-dlam2.fits"
  hdu = fits.open(f"{datadir}/{infile}")["DATA"]


  wcs = WCS(hdu.header)
  ANGSTROM = 1e-10                # convert to SI lengths for WCS
  nwav, ny, nx = hdu.data.shape
  _, _, waves = wcs.pixel_to_world_values([0]*nwav, [0]*nwav, np.arange(nwav))
  contwavs = np.array([6594.2, 6660.5])*ANGSTROM
  linewavs = np.array([6628.2, 6638.4])*ANGSTROM
  [ic1, ic2], _, _ = wcs.world_to_array_index_values([0, 0], [0, 0], contwavs)
  [il1, il2], _, _ = wcs.world_to_array_index_values([0, 0], [0, 0], linewavs)

  # slices for blue and red continuum sections 
  bslice = slice(ic1, il1)
  rslice = slice(il2, ic2)
  # slices for line section and full section
  lslice = slice(il1, il2)
  fslice = slice(ic1, ic2)

  # Wavelength arrays for continuum, line, and full
  cwaves = np.concatenate([waves[bslice], waves[rslice]])
  lwaves = waves[lslice]
  fwaves = waves[fslice]

  # Corresponding intensity cubes
  cdata = np.concatenate([hdu.data[bslice, :, :], hdu.data[rslice, :, :]], axis=0)
  ldata = hdu.data[lslice, :, :]
  fdata = hdu.data[fslice, :, :]
  # Cube to put rectified spectrum
  rdata = np.empty_like(fdata)

  for j, i in itertools.product(range(ny), range(nx)):
      # Fit polynomial to continuum
      p = T.fit(cwaves, cdata[:, j, i], deg=2)
      # Divide full section by fit to give rectified spectrum of residual intensity
      rdata[:, j, i] = fdata[:, j, i] / p(fwaves)

  # Absorption depth is 1 - residual intensity
  adata = 1.0 - rdata
  # Adjust line slice for the new wavelength window (fwaves)
  lslice = slice(il1-ic1, il2-ic1)
  # integrate absorption depth over line wavelengths to get equivalent width
  ewmap = np.trapz(adata[lslice, :, :], x=fwaves[lslice], axis=0)/ANGSTROM

  outfile = f"muse-ew6634-{REBIN}.fits"
  fits.PrimaryHDU(header=wcs.celestial.to_header(), data=ewmap).writeto(
      f"{datadir}/{outfile}", overwrite=True)
#+end_src

#+RESULTS: ew-6634
: None

#+call: ew-6634("rebin05x05")

#+RESULTS:
: None

**** Make maps of the different Raman bands
+ This is an intermediate step to doing proper multi-line fitting
+ Bands are defined in [[id:B644E1CC-212F-4A30-9924-04DB7BAADF00][Column densities]]

#+begin_src python :tangle ../src/extract-raman-bands.py :eval no
  import sys
  import numpy as np
  from astropy.io import fits
  from astropy.wcs import WCS

  try:
      INDIR = sys.argv[1]
      REBIN = sys.argv[2]
      OUTDIR = sys.argv[3]
  except IndexError:
      sys.exit(f"Usage: {sys.argv[0]} INDIR REBIN OUTDIR")

  infile = f"muse-hr-data-wavsec23{REBIN}-cont-sub.fits"
  hdu = fits.open(f"{INDIR}/{infile}")["DATA"]

  bands = {
      "R007": [6568.7, 6571.25],
      "R011": [6572.1, 6574.65],
      "R040": [6594.2, 6611.2],
      "R058": [6612.05, 6628.2],
      "R087": [6638.4, 6660.5],
      "R136": [6688.55, 6708.95],
      "B006": [6555.95, 6557.65],
      "B009": [6552.55, 6555.1],
      "B033": [6518.55, 6540.65],
      "B054": [6499.85, 6517.7],
      "B080": [6469.25, 6496.45],
      "B133": [6414.85, 6445.45],
  }

  wcs = WCS(hdu.header)
  imhdr = wcs.celestial.to_header()

  nwav, ny, nx = hdu.data.shape
  wavpix = np.arange(nwav)

  for band, waves in bands.items():
      waves = np.array(waves)/1e10
      [i1, i2], _, _ = wcs.world_to_array_index_values([0, 0], [0, 0], waves)
      image = hdu.data[i1:i2+1, :, :].mean(axis=0)
      outfile = infile.replace("wavsec23", f"ha-raman-{band}")
      fits.PrimaryHDU(data=image, header=imhdr).writeto(
          f"{OUTDIR}/{outfile}", overwrite=True)
#+end_src

#+name: extract-raman-bands
#+header: :var REBIN="-rebin16x16"
#+header: :var INDIR="../data/orion-muse"
#+header: :var OUTDIR="../data/orion-muse"
#+begin_src sh
python ../src/extract-raman-bands.py $REBIN $INDIR $OUTDIR
#+end_src

#+RESULTS: extract-raman-bands
: None

And extract the bands for the 5x5 cube

#+call: extract-raman-bands("-rebin05x05")

#+RESULTS:
: None


And for the 1x1 full-resolution cube
#+call: extract-raman-bands(REBIN="", INDIR="/Users/will/Work/Muse-Hii-Data/M42")

#+RESULTS:
: None

**** Sum and ratios of bands

#+begin_src python
  import numpy as np
  from astropy.io import fits
  from astropy.wcs import WCS
  suffix = "-multibin-1000"
  bands = {
      "R040": [6594.2, 6611.2],
      "R058": [6612.05, 6628.2],
      "R087": [6638.4, 6660.5],
      "R136": [6688.55, 6708.95],
      "B033": [6518.55, 6540.65],
      "B054": [6499.85, 6517.7],
      "B080": [6469.25, 6496.45],
      "B133": [6414.85, 6445.45],
  }

  datadir = "../data/orion-muse"
  hdus = {}
  for band in bands:
      infile = f"muse-hr-data-ha-raman-{band}-cont-sub{suffix}.fits"
      hdus[band] = fits.open(f"{datadir}/{infile}")[0]


  data = np.sum([hdus[band].data for band in bands], axis=0)
  outfile = f"muse-hr-data-ha-raman-TOTAL{suffix}.fits"
  fits.PrimaryHDU(
      data=data,
      header=hdus["R040"].header,
  ).writeto(
      f"{datadir}/{outfile}",
      overwrite=True,
  )

  data = np.sum([hdus[band].data for band in ["R040", "R058", "B033", "B054"]], axis=0)
  outfile = f"muse-hr-data-ha-raman-TOTAL-NEAR{suffix}.fits"
  fits.PrimaryHDU(
      data=data,
      header=hdus["R040"].header,
  ).writeto(
      f"{datadir}/{outfile}",
      overwrite=True,
  )

  data = np.sum([hdus[band].data for band in ["R087", "R136", "B080", "B133"]], axis=0)
  outfile = f"muse-hr-data-ha-raman-TOTAL-FAR{suffix}.fits"
  fits.PrimaryHDU(
      data=data,
      header=hdus["R040"].header,
  ).writeto(
      f"{datadir}/{outfile}",
      overwrite=True,
  )

  data = np.sum(
      [hdus[band].data for band in ["R040", "R058", "R087", "R136"]],
      axis=0
  )
  data /= np.sum(
      [hdus[band].data for band in ["B033", "B054", "B080", "B133"]],
      axis=0
  )
  outfile = f"muse-hr-data-ha-raman-RED-BLUE{suffix}.fits"
  fits.PrimaryHDU(
      data=data,
      header=hdus["R040"].header,
  ).writeto(
      f"{datadir}/{outfile}",
      overwrite=True,
  )


  data = np.sum(
      [hdus[band].data for band in ["R087", "R136", "B080", "B133"]],
      axis=0
      )
  data /= np.sum(
      [hdus[band].data for band in ["R040", "R058", "B033", "B080"]],
      axis=0
  )
  outfile = f"muse-hr-data-ha-raman-FAR-NEAR{suffix}.fits"
  fits.PrimaryHDU(
      data=data,
      header=hdus["R040"].header,
  ).writeto(
      f"{datadir}/{outfile}",
      overwrite=True,
  )

#+end_src

#+RESULTS:
: None


**** Multibinning of band maps

#+begin_src sh :results verbatim
  MULTIBIN=/Users/will/Dropbox/multibin-maps/multibin-map.py
  #MULTIBIN=/Users/will/Dropbox/OrionWest/multibin-map.py
  cd ../data/orion-muse
  for map in muse-hr-data-ha-raman-[BR]???-cont-sub.fits; do
      python $MULTIBIN $map
  done
#+end_src

#+RESULTS:
#+begin_example
Saving muse-hr-data-ha-raman-B006-cont-sub-bin001.fits
Saving muse-hr-data-ha-raman-B006-cont-sub-bin002.fits
Saving muse-hr-data-ha-raman-B006-cont-sub-bin004.fits
Saving muse-hr-data-ha-raman-B006-cont-sub-bin008.fits
Saving muse-hr-data-ha-raman-B006-cont-sub-bin016.fits
Saving muse-hr-data-ha-raman-B006-cont-sub-bin032.fits
Saving muse-hr-data-ha-raman-B006-cont-sub-bin064.fits
Saving muse-hr-data-ha-raman-B006-cont-sub-bin128.fits
Saving muse-hr-data-ha-raman-B006-cont-sub-bin256.fits
Saving muse-hr-data-ha-raman-B009-cont-sub-bin001.fits
Saving muse-hr-data-ha-raman-B009-cont-sub-bin002.fits
Saving muse-hr-data-ha-raman-B009-cont-sub-bin004.fits
Saving muse-hr-data-ha-raman-B009-cont-sub-bin008.fits
Saving muse-hr-data-ha-raman-B009-cont-sub-bin016.fits
Saving muse-hr-data-ha-raman-B009-cont-sub-bin032.fits
Saving muse-hr-data-ha-raman-B009-cont-sub-bin064.fits
Saving muse-hr-data-ha-raman-B009-cont-sub-bin128.fits
Saving muse-hr-data-ha-raman-B009-cont-sub-bin256.fits
Saving muse-hr-data-ha-raman-B033-cont-sub-bin001.fits
Saving muse-hr-data-ha-raman-B033-cont-sub-bin002.fits
Saving muse-hr-data-ha-raman-B033-cont-sub-bin004.fits
Saving muse-hr-data-ha-raman-B033-cont-sub-bin008.fits
Saving muse-hr-data-ha-raman-B033-cont-sub-bin016.fits
Saving muse-hr-data-ha-raman-B033-cont-sub-bin032.fits
Saving muse-hr-data-ha-raman-B033-cont-sub-bin064.fits
Saving muse-hr-data-ha-raman-B033-cont-sub-bin128.fits
Saving muse-hr-data-ha-raman-B033-cont-sub-bin256.fits
Saving muse-hr-data-ha-raman-B054-cont-sub-bin001.fits
Saving muse-hr-data-ha-raman-B054-cont-sub-bin002.fits
Saving muse-hr-data-ha-raman-B054-cont-sub-bin004.fits
Saving muse-hr-data-ha-raman-B054-cont-sub-bin008.fits
Saving muse-hr-data-ha-raman-B054-cont-sub-bin016.fits
Saving muse-hr-data-ha-raman-B054-cont-sub-bin032.fits
Saving muse-hr-data-ha-raman-B054-cont-sub-bin064.fits
Saving muse-hr-data-ha-raman-B054-cont-sub-bin128.fits
Saving muse-hr-data-ha-raman-B054-cont-sub-bin256.fits
Saving muse-hr-data-ha-raman-B080-cont-sub-bin001.fits
Saving muse-hr-data-ha-raman-B080-cont-sub-bin002.fits
Saving muse-hr-data-ha-raman-B080-cont-sub-bin004.fits
Saving muse-hr-data-ha-raman-B080-cont-sub-bin008.fits
Saving muse-hr-data-ha-raman-B080-cont-sub-bin016.fits
Saving muse-hr-data-ha-raman-B080-cont-sub-bin032.fits
Saving muse-hr-data-ha-raman-B080-cont-sub-bin064.fits
Saving muse-hr-data-ha-raman-B080-cont-sub-bin128.fits
Saving muse-hr-data-ha-raman-B080-cont-sub-bin256.fits
Saving muse-hr-data-ha-raman-B133-cont-sub-bin001.fits
Saving muse-hr-data-ha-raman-B133-cont-sub-bin002.fits
Saving muse-hr-data-ha-raman-B133-cont-sub-bin004.fits
Saving muse-hr-data-ha-raman-B133-cont-sub-bin008.fits
Saving muse-hr-data-ha-raman-B133-cont-sub-bin016.fits
Saving muse-hr-data-ha-raman-B133-cont-sub-bin032.fits
Saving muse-hr-data-ha-raman-B133-cont-sub-bin064.fits
Saving muse-hr-data-ha-raman-B133-cont-sub-bin128.fits
Saving muse-hr-data-ha-raman-B133-cont-sub-bin256.fits
Saving muse-hr-data-ha-raman-R007-cont-sub-bin001.fits
Saving muse-hr-data-ha-raman-R007-cont-sub-bin002.fits
Saving muse-hr-data-ha-raman-R007-cont-sub-bin004.fits
Saving muse-hr-data-ha-raman-R007-cont-sub-bin008.fits
Saving muse-hr-data-ha-raman-R007-cont-sub-bin016.fits
Saving muse-hr-data-ha-raman-R007-cont-sub-bin032.fits
Saving muse-hr-data-ha-raman-R007-cont-sub-bin064.fits
Saving muse-hr-data-ha-raman-R007-cont-sub-bin128.fits
Saving muse-hr-data-ha-raman-R007-cont-sub-bin256.fits
Saving muse-hr-data-ha-raman-R011-cont-sub-bin001.fits
Saving muse-hr-data-ha-raman-R011-cont-sub-bin002.fits
Saving muse-hr-data-ha-raman-R011-cont-sub-bin004.fits
Saving muse-hr-data-ha-raman-R011-cont-sub-bin008.fits
Saving muse-hr-data-ha-raman-R011-cont-sub-bin016.fits
Saving muse-hr-data-ha-raman-R011-cont-sub-bin032.fits
Saving muse-hr-data-ha-raman-R011-cont-sub-bin064.fits
Saving muse-hr-data-ha-raman-R011-cont-sub-bin128.fits
Saving muse-hr-data-ha-raman-R011-cont-sub-bin256.fits
Saving muse-hr-data-ha-raman-R040-cont-sub-bin001.fits
Saving muse-hr-data-ha-raman-R040-cont-sub-bin002.fits
Saving muse-hr-data-ha-raman-R040-cont-sub-bin004.fits
Saving muse-hr-data-ha-raman-R040-cont-sub-bin008.fits
Saving muse-hr-data-ha-raman-R040-cont-sub-bin016.fits
Saving muse-hr-data-ha-raman-R040-cont-sub-bin032.fits
Saving muse-hr-data-ha-raman-R040-cont-sub-bin064.fits
Saving muse-hr-data-ha-raman-R040-cont-sub-bin128.fits
Saving muse-hr-data-ha-raman-R040-cont-sub-bin256.fits
Saving muse-hr-data-ha-raman-R058-cont-sub-bin001.fits
Saving muse-hr-data-ha-raman-R058-cont-sub-bin002.fits
Saving muse-hr-data-ha-raman-R058-cont-sub-bin004.fits
Saving muse-hr-data-ha-raman-R058-cont-sub-bin008.fits
Saving muse-hr-data-ha-raman-R058-cont-sub-bin016.fits
Saving muse-hr-data-ha-raman-R058-cont-sub-bin032.fits
Saving muse-hr-data-ha-raman-R058-cont-sub-bin064.fits
Saving muse-hr-data-ha-raman-R058-cont-sub-bin128.fits
Saving muse-hr-data-ha-raman-R058-cont-sub-bin256.fits
Saving muse-hr-data-ha-raman-R087-cont-sub-bin001.fits
Saving muse-hr-data-ha-raman-R087-cont-sub-bin002.fits
Saving muse-hr-data-ha-raman-R087-cont-sub-bin004.fits
Saving muse-hr-data-ha-raman-R087-cont-sub-bin008.fits
Saving muse-hr-data-ha-raman-R087-cont-sub-bin016.fits
Saving muse-hr-data-ha-raman-R087-cont-sub-bin032.fits
Saving muse-hr-data-ha-raman-R087-cont-sub-bin064.fits
Saving muse-hr-data-ha-raman-R087-cont-sub-bin128.fits
Saving muse-hr-data-ha-raman-R087-cont-sub-bin256.fits
Saving muse-hr-data-ha-raman-R136-cont-sub-bin001.fits
Saving muse-hr-data-ha-raman-R136-cont-sub-bin002.fits
Saving muse-hr-data-ha-raman-R136-cont-sub-bin004.fits
Saving muse-hr-data-ha-raman-R136-cont-sub-bin008.fits
Saving muse-hr-data-ha-raman-R136-cont-sub-bin016.fits
Saving muse-hr-data-ha-raman-R136-cont-sub-bin032.fits
Saving muse-hr-data-ha-raman-R136-cont-sub-bin064.fits
Saving muse-hr-data-ha-raman-R136-cont-sub-bin128.fits
Saving muse-hr-data-ha-raman-R136-cont-sub-bin256.fits
#+end_example

#+begin_src sh :results verbatim
  MULTIBIN=/Users/will/Dropbox/multibin-maps/multibin-map.py
  cd ../data/orion-muse
  python $MULTIBIN linesum-blue-C_I-8727.fits
#+end_src

#+RESULTS:
: Saving linesum-blue-C_I-8727-bin001.fits
: Saving linesum-blue-C_I-8727-bin002.fits
: Saving linesum-blue-C_I-8727-bin004.fits
: Saving linesum-blue-C_I-8727-bin008.fits
: Saving linesum-blue-C_I-8727-bin016.fits
: Saving linesum-blue-C_I-8727-bin032.fits
: Saving linesum-blue-C_I-8727-bin064.fits
: Saving linesum-blue-C_I-8727-bin128.fits
: Saving linesum-blue-C_I-8727-bin256.fits





**** Combine multibin maps
#+BEGIN_SRC python :tangle ../src/raman-multibin-combine.py
  import sys
  from astropy.io import fits
  import numpy as np
  sys.path.append('/Users/will/Work/RubinWFC3/Tsquared')
  from rebin_utils import oversample
  from skimage.morphology import square
  from skimage.filters.rank import modal


  def minify(a, n):
      return a[::n, ::n]


  ELEMENT = square(5)
  def cleanup_mask(mask, n):
      """Eliminate small islands in the mask"""
      m = minify(mask, n).astype(np.uint8)
      m = m & modal(m, ELEMENT)
      return oversample(m, n).astype(bool)


  try: 
      prefix, minw_scale = sys.argv[1], float(sys.argv[2])
  except:
      print('Usage:', sys.argv[0], 'FITSFILE_PREFIX MINIMUM_WEIGHT [COARSE_WEIGHT]')
      sys.exit()

  try:
      minw_coarse = float(sys.argv[3])
  except IndexError:
      minw_coarse = None

  nlist = [1, 2, 4, 8, 16, 32, 64]
  minweights = [2.0, 2.0, 2.0, 4.0, 8.0, 8.0, 8.0]
  if minw_coarse is not None:
      minweights[-1] = minw_coarse
  outim = np.zeros((1536, 1792))
  for n, minw in reversed(list(zip(nlist, minweights))):
      fn = '{}-bin{:03d}.fits'.format(prefix, n)
      hdulist = fits.open(fn)
      im = hdulist['scaled'].data
      hdr = hdulist['scaled'].header
      w = hdulist['weight'].data
      m = cleanup_mask(w*im >= minw*minw_scale, n)
      m = m & np.isfinite(w) & (w > 0.0) & np.isfinite(im) & (im > 0.0)
      outim[m] = im[m]
  fits.PrimaryHDU(header=hdr, data=outim).writeto(
      f"{prefix}-multibin-{int(minw_scale)}.fits", overwrite=True)
#+END_SRC

#+RESULTS:

Original runs were with ~MINIMUM_WEIGHT=5000~.  But we are going to try some higher resolution but noisier ones. 
#+begin_src sh :results silent :dir ..
python src/raman-multibin-combine.py data/orion-muse/linesum-blue-C_I-8727 500 0.0
#+end_src


#+begin_src sh :results silent :dir ..
python src/raman-multibin-combine.py data/orion-muse/muse-hr-data-ha-raman-R040-cont-sub 1000 0.0
#+end_src

#+begin_src sh :results silent :dir ..
python src/raman-multibin-combine.py data/orion-muse/muse-hr-data-ha-raman-R058-cont-sub 1000 0.0
#+end_src

#+begin_src sh :results silent :dir ..
python src/raman-multibin-combine.py data/orion-muse/muse-hr-data-ha-raman-R087-cont-sub 1000 0.0
#+end_src

#+begin_src sh :results silent :dir ..
python src/raman-multibin-combine.py data/orion-muse/muse-hr-data-ha-raman-R136-cont-sub 1000 0.0
#+end_src

#+begin_src sh :results silent :dir ..
python src/raman-multibin-combine.py data/orion-muse/muse-hr-data-ha-raman-B033-cont-sub 1000 0.0
#+end_src

#+begin_src sh :results silent :dir ..
python src/raman-multibin-combine.py data/orion-muse/muse-hr-data-ha-raman-B054-cont-sub 1000 0.0
#+end_src

#+begin_src sh :results silent :dir ..
python src/raman-multibin-combine.py data/orion-muse/muse-hr-data-ha-raman-B080-cont-sub 1000 0.0
#+end_src

#+begin_src sh :results silent :dir ..
python src/raman-multibin-combine.py data/orion-muse/muse-hr-data-ha-raman-B133-cont-sub 1000 0.0
#+end_src


**** Make figures of maps
+ Try out the Lupton:2014a method, although I am a bit skeptical
  + It seems to lose the whites completely
  + And RGB is not perceptually uniform
    + So blue areas look darker
  + For instance, on this test image (with random number), all the bright spots are green
#+begin_src python :results file :return figfile
  import numpy as np
  import matplotlib.pyplot as plt
  from astropy.visualization import make_lupton_rgb
  image_r = np.random.random((100,100))
  image_g = np.random.random((100,100))
  image_b = np.random.random((100,100))
  image = make_lupton_rgb(image_r, image_g, image_b, stretch=0.5)

  figfile = "lupton-rgb-test.pdf"
  fig, ax = plt.subplots()
  ax.imshow(image)
  fig.savefig(figfile)
#+end_src

#+RESULTS:
[[file:lupton-rgb-test.pdf]]

#+name: rgb-lupton-raman
#+header: :var TAB=rgb-limits-ifront SUFFIX="ifront" DATADIR="../data/orion-muse"
#+header: :var STRETCH=0.3 Q=4 STARS=star-coords HDU="SCALED"
#+begin_src python :results file :return figfile
  import numpy as np
  import matplotlib.pyplot as plt
  from astropy.visualization import make_lupton_rgb
  from astropy.io import fits
  from astropy.wcs import WCS

  # Unpack the channel info from the table
  [rf, r1, r2], [gf, g1, g2], [bf, b1, b2] = TAB

  def load_and_scale_image(fn, v1, v2, ihdu=HDU):
      data = fits.open(f"{DATADIR}/{fn}")[ihdu].data
      return (data - v1) / (v2 - v1)


  w = WCS(fits.open(f"{DATADIR}/{rf}")[HDU].header)

  image_r = load_and_scale_image(rf, r1, r2)
  image_g = load_and_scale_image(gf, g1, g2)
  image_b = load_and_scale_image(bf, b1, b2)
  image = make_lupton_rgb(image_r, image_g, image_b, stretch=STRETCH, Q=Q)

  figfile = f"rgb-lupton-raman-{SUFFIX}.jpg"
  fig, ax = plt.subplots(figsize=(6.2, 5), subplot_kw=dict(projection=w))
  ax.imshow(image)
  for _, ra, dec, size in STARS:
      ax.scatter(ra, dec, transform=ax.get_transform("icrs"), s=0.6*size, ec="yellow", fc="none")
  ax.set(xlabel="RA (J2000)", ylabel="Dec (J2000)")
  fig.tight_layout(rect=[0.08, 0.07, 1.0, 1.0])
  fig.savefig(figfile, dpi=200)
#+end_src

#+RESULTS: rgb-lupton-raman
[[file:rgb-lupton-raman-ifront.jpg]]


I have decreased ~vmax~ for 6300 to bring out the yellow and cyan better 
#+name: rgb-limits-ifront
| linesum-O_I-8446-bin001.fits  |  3000 |  200000 |
| linesum-O_I-6300-bin001.fits  |  8000 |  150000 |
| linesum-O_II-7318-bin001.fits | 20000 | 1000000 |

These are the original limits I used in DS9
#+name: rgb-limits-ifront-ds9
| linesum-O_I-8446-bin001.fits |  3000 |  200000 |
| linesum-O_I-6300-bin001.fits  |  8000 |  200000 |
| linesum-O_II-7318-bin001.fits | 20000 | 1000000 |

Now, the Raman bands

#+name: rgb-limits-raman-R
| muse-hr-data-ha-raman-R087-cont-sub-multibin.fits | 20 |  450 |
| muse-hr-data-ha-raman-R057-cont-sub-multibin.fits | 20 | 1000 |
| muse-hr-data-ha-raman-R040-cont-sub-multibin.fits | 20 | 2000 |

#+call: rgb-lupton-raman(TAB=rgb-limits-raman-R, SUFFIX="raman-R", STRETCH=0.4, Q=8)

#+RESULTS:
[[file:rgb-lupton-raman-raman-R.jpg]]

I don't like that so much - it looks very brown. 

Coordinates of stars. 
#+begin_src python :return table
  from astropy.coordinates import SkyCoord

  stars = [
      "tet01 Ori A",
      "tet01 Ori B",
      "tet01 Ori C",
      "tet01 Ori D",
      "tet02 Ori A",
      "tet02 Ori B",
  ]

  table = []
  for star in stars:
      c = SkyCoord.from_name(star)
      table.append([star, c.ra.value, c.dec.value])
    
#+end_src

#+RESULTS:
| tet01 Ori A |  83.8159384 |  -5.3873146 |
| tet01 Ori B | 83.81713333 | -5.38524722 |
| tet01 Ori C | 83.81859898 | -5.38968015 |
| tet01 Ori D | 83.82163535 | -5.38765726 |
| tet02 Ori A | 83.84542605 | -5.41606033 |
| tet02 Ori B | 83.86000176 | -5.41688682 |

Make a version of above table with sizes for circles. 

#+name: star-coords
| tet01 Ori A |  83.8159384 |  -5.3873146 |  50 |
| tet01 Ori B | 83.81713333 | -5.38524722 |  30 |
| tet01 Ori C | 83.81859898 | -5.38968015 | 100 |
| tet01 Ori D | 83.82163535 | -5.38765726 |  50 |
| tet02 Ori A | 83.84542605 | -5.41606033 | 100 |
| tet02 Ori B | 83.86000176 | -5.41688682 |  70 |


Here is a version that does a natural RGB image

#+name: rgb-natural-raman
#+header: :var TAB=rgb-limits-raman-R SUFFIX="raman-R" DATADIR="../data/orion-muse"
#+header: :var SCALE="sqrt" STARS=star-coords HDU="SCALED"
#+begin_src python :results file :return figfile
  import numpy as np
  import matplotlib.pyplot as plt
  from astropy.visualization import make_lupton_rgb
  from astropy.visualization.lupton_rgb import LinearMapping
  from astropy.io import fits
  from astropy.wcs import WCS
  from astropy.coordinates import SkyCoord

  # Unpack the channel info from the table
  [rf, r1, r2], [gf, g1, g2], [bf, b1, b2] = TAB

  def load_and_scale_image(fn, v1, v2, ihdu='SCALED'):
      data = fits.open(f"{DATADIR}/{fn}")[ihdu].data
      return (data - v1) / (v2 - v1)


  w = WCS(fits.open(f"{DATADIR}/{rf}")[HDU].header)

  image_r = load_and_scale_image(rf, r1, r2)
  image_g = load_and_scale_image(gf, g1, g2)
  image_b = load_and_scale_image(bf, b1, b2)
  if SCALE == "sqrt":
      image_r = np.sqrt(image_r)
      image_g = np.sqrt(image_g)
      image_b = np.sqrt(image_b)

  image = LinearMapping(0.0, 1.0).make_rgb_image(image_r, image_g, image_b)

  figfile = f"rgb-natural-raman-{SUFFIX}.jpg"
  fig, ax = plt.subplots(figsize=(6.2, 5), subplot_kw=dict(projection=w))
  ax.imshow(image)
  for _, ra, dec, size in STARS:
      ax.scatter(ra, dec, transform=ax.get_transform("icrs"), s=0.6*size, ec="yellow", fc="none")
    
  ax.set(xlabel="RA (J2000)", ylabel="Dec (J2000)")
  fig.tight_layout(rect=[0.08, 0.07, 1.0, 1.0])
  fig.savefig(figfile, dpi=200)
#+end_src

#+RESULTS: rgb-natural-raman
[[file:rgb-natural-raman-raman-R.jpg]]

That looks a lot better - goes to white in the bright parts.

Now for the blue wing

#+name: rgb-limits-raman-B
| muse-hr-data-ha-raman-B080-cont-sub-multibin.fits | 15 |  300 |
| muse-hr-data-ha-raman-B054-cont-sub-multibin.fits | 20 | 1000 |
| muse-hr-data-ha-raman-B033-cont-sub-multibin.fits | 20 | 2000 |


#+call: rgb-natural-raman(TAB=rgb-limits-raman-B, SUFFIX="raman-B")

#+RESULTS:
[[file:rgb-natural-raman-raman-B.jpg]]


Now try a higher resolution ones

#+name: rgb-limits-raman-R-hires
| muse-hr-data-ha-raman-R087-cont-sub-multibin-1000.fits | 20 | 700  |
| muse-hr-data-ha-raman-R058-cont-sub-multibin-1000.fits | 30 | 1200 |
| muse-hr-data-ha-raman-R040-cont-sub-multibin-1000.fits | 40 | 2400 |

#+call: rgb-natural-raman(TAB=rgb-limits-raman-R-hires, SUFFIX="raman-R-hires", SCALE="sqrt")

#+RESULTS:
[[file:rgb-natural-raman-raman-R-hires.jpg]]

#+name: rgb-limits-raman-B-hires
| muse-hr-data-ha-raman-B080-cont-sub-multibin-1000.fits | 20 |  700 |
| muse-hr-data-ha-raman-B054-cont-sub-multibin-1000.fits | 30 | 1200 |
| muse-hr-data-ha-raman-B033-cont-sub-multibin-1000.fits | 40 | 2400 |


#+call: rgb-natural-raman(TAB=rgb-limits-raman-B-hires, SUFFIX="raman-B-hires")

#+RESULTS:
[[file:rgb-natural-raman-raman-B-hires.jpg]]

And try Lupton with hi-res images...

#+call: rgb-lupton-raman(TAB=rgb-limits-raman-R-hires, SUFFIX="raman-R-hires", STRETCH=0.5, Q=3)

#+RESULTS:
[[file:rgb-lupton-raman-raman-R-hires.jpg]]

#+call: rgb-lupton-raman(TAB=rgb-limits-raman-B-hires, SUFFIX="raman-B-hires", STRETCH=0.5, Q=3)

#+RESULTS:
[[file:rgb-lupton-raman-raman-B-hires.jpg]]


...nah, still ugly.  But maybe I should use them, since they are higher contrast


**** Some more color figures

***** Velocity maps of H
:PROPERTIES:
:ID:       6104B4AF-6D51-4BA2-8F60-FCC6F92D762F
:END:
#+name: rgb-lupton-velchannels
#+header: :var TAB=rgb-limits-hi-line-center SUFFIX="hi-line-center" DATADIR="../data/orion-muse"
#+header: :var STRETCH=0.3 Q=4 STARS=star-coords HDU="DATA"
#+begin_src python :results file :return figfile
  import numpy as np
  import matplotlib.pyplot as plt
  from astropy.visualization import make_lupton_rgb
  from astropy.io import fits
  from astropy.wcs import WCS

  # Unpack the channel info from the table
  [rf, r1, r2], [gf, g1, g2], [bf, b1, b2] = TAB

  def load_and_scale_image(fn, v1, v2, ihdu=HDU):
      data = fits.open(f"{DATADIR}/{fn}")[ihdu].data
      return (data - v1) / (v2 - v1)


  w = WCS(fits.open(f"{DATADIR}/{rf}")[HDU]).celestial

  image_r = load_and_scale_image(rf, r1, r2)
  image_g = load_and_scale_image(gf, g1, g2)
  image_b = load_and_scale_image(bf, b1, b2)
  image = make_lupton_rgb(image_r, image_g, image_b, stretch=STRETCH, Q=Q)

  figfile = f"rgb-lupton-velchannels-{SUFFIX}.jpg"
  fig, ax = plt.subplots(figsize=(6.2, 5), subplot_kw=dict(projection=w))
  ax.imshow(image)
  for _, ra, dec, size in STARS:
      ax.scatter(ra, dec, transform=ax.get_transform("icrs"), s=0.6*size, ec="yellow", fc="none")
  ax.set(xlabel="RA (J2000)", ylabel="Dec (J2000)")
  fig.tight_layout(rect=[0.08, 0.07, 1.0, 1.0])
  fig.savefig(figfile, dpi=200)
#+end_src

#+RESULTS: rgb-lupton-velchannels
[[file:rgb-lupton-velchannels-hi-line-center.jpg]]

#+name: rgb-limits-hi-line-center
| hi-05x05-8751_50.fits | 0 | 1100000 |
| hi-05x05-8750_65.fits | 0 | 1100000 |
| hi-05x05-8749_80.fits | 0 | 800000  |

#+name: rgb-limits-hi-near-red
| hi-05x05-8752_35.fits | 0 | 400000  |
| hi-05x05-8751_50.fits | 0 | 800000  |
| hi-05x05-8750_65.fits | 0 | 1100000 |
#+call: rgb-lupton-velchannels(TAB=rgb-limits-hi-near-red, SUFFIX="hi-near-red", STRETCH=0.5, Q=3, HDU="DATA") 

#+RESULTS:
[[file:rgb-lupton-velchannels-hi-near-red.jpg]]


#+name: rgb-limits-hi-mid-red
| hi-05x05-8753_20.fits | 0 | 110000  |
| hi-05x05-8752_35.fits | 0 | 400000  |
| hi-05x05-8751_50.fits | 0 | 800000  |
#+call: rgb-lupton-velchannels(TAB=rgb-limits-hi-mid-red, SUFFIX="hi-mid-red", STRETCH=0.5, Q=3, HDU="DATA") 

#+RESULTS:
[[file:rgb-lupton-velchannels-hi-mid-red.jpg]]

#+name: rgb-limits-hi-far-red
| hi-05x05-8754_05.fits | 0 | 25000   |
| hi-05x05-8753_20.fits | 0 | 180000  |
| hi-05x05-8752_35.fits | 0 | 600000  |
#+call: rgb-lupton-velchannels(TAB=rgb-limits-hi-far-red, SUFFIX="hi-far-red", STRETCH=0.5, Q=3, HDU="DATA") 

#+RESULTS:
[[file:rgb-lupton-velchannels-hi-far-red.jpg]]


#+name: rgb-limits-hi-near-blue
| hi-05x05-8750_65.fits | 0 | 1100000 |
| hi-05x05-8749_80.fits | 0 | 800000  |
| hi-05x05-8748_95.fits | 0 | 300000  |

#+call: rgb-lupton-velchannels(TAB=rgb-limits-hi-near-blue, SUFFIX="hi-near-blue", STRETCH=0.5, Q=3, HDU="DATA") 

#+RESULTS:
[[file:rgb-lupton-velchannels-hi-near-blue.jpg]]

#+name: rgb-limits-hi-mid-blue
| hi-05x05-8749_80.fits | 0 | 800000  |
| hi-05x05-8748_95.fits | 0 | 300000  |
| hi-05x05-8748_10.fits | 0 | 100000  |

#+call: rgb-lupton-velchannels(TAB=rgb-limits-hi-mid-blue, SUFFIX="hi-mid-blue", STRETCH=0.5, Q=3, HDU="DATA") 

#+RESULTS:
[[file:rgb-lupton-velchannels-hi-mid-blue.jpg]]

#+name: rgb-limits-hi-far-blue
| hi-05x05-8748_95.fits | 0 | 300000  |
| hi-05x05-8748_10.fits | 0 | 100000  |
| hi-05x05-8747_25.fits | 0 | 30000   |

#+call: rgb-lupton-velchannels(TAB=rgb-limits-hi-far-blue, SUFFIX="hi-far-blue", STRETCH=0.5, Q=3, HDU="DATA") 

#+RESULTS:
[[file:rgb-lupton-velchannels-hi-far-blue.jpg]]

***** TODO [Fe II] 8617 
:PROPERTIES:
:ID:       97441E8F-68B9-4716-A4BE-8A4FA7028176
:END:
+ This line is sat on top of the second order H\beta line
+ [ ] But we can use a linear interpolation of the 8612.1 and 8621.45 channels to remove this
+ Leave it for another day
#+name: rgb-limits-feii-center
| feii-05x05-8618_05.fits | 0 | 200000  |
| feii-05x05-8617_20.fits | 0 | 200000  |
| feii-05x05-8616_35.fits | 0 | 100000  |

#+call: rgb-lupton-velchannels(TAB=rgb-limits-feii-center, SUFFIX="feii-center", STRETCH=0.5, Q=3, HDU="DATA") 

#+RESULTS:
[[file:rgb-lupton-velchannels-feii-center.jpg]]

#+name: rgb-limits-feii-near-blue
| feii-05x05-8617_20.fits | 0 | 200000  |
| feii-05x05-8616_35.fits | 0 | 100000  |
| feii-05x05-8615_50.fits | 0 | 60000   |

#+call: rgb-lupton-velchannels(TAB=rgb-limits-feii-near-blue, SUFFIX="feii-near-blue", STRETCH=0.5, Q=3, HDU="DATA") 

#+RESULTS:
[[file:rgb-lupton-velchannels-feii-near-blue.jpg]]

***** TODO Other lines to look at 
+ He II 6827 shows the inner arc nicely to red side but there must be better He II lines
+ N II 5941 and 5831 show nicely the Big Arc, but very weak
+ Unknown line at 5988 \AA
  + Take 5984.75 and 5990.7 as the base level
  + Add up from 5985.6 \to 5989.85 
***** DONE Maps of different extinction estimates
CLOSED: [2019-09-07 Sat 09:02]
First of all, we would need to put the radio tau map on the same WCS as the others
#+begin_src python :results silent
  import numpy as np
  from astropy.io import fits
  from astropy.wcs import wcs
  from reproject import reproject_interp

  datadir = "../data/orion-muse"
  radiodir = "../../OrionDust"
  hdu1 = fits.open(f"{datadir}/C_H_beta-bin004.fits")["SCALED"]
  hdu2 = fits.open(f"{radiodir}/chbeta-radec.fits")[0]

  newdata, _ = reproject_interp(hdu2, hdu1.header)

  fits.PrimaryHDU(header=hdu1.header, data=newdata).writeto(
      f"{datadir}/C_H_beta_Radio.fits",
      overwrite=True,
  )
#+end_src

While we are at it, we can make difference maps

#+begin_src python :dir ../data/orion-muse :results silent
  from astropy.io import fits

  hdu_V = fits.open("C_H_beta-bin004.fits")["SCALED"]
  hdu_I = fits.open("C_H_beta_9229-bin004.fits")["SCALED"]
  hdu_R = fits.open("C_H_beta_Radio.fits")[0]

  fits.PrimaryHDU(
      header=hdu_V.header,
      data=hdu_I.data - hdu_V.data
  ).writeto("Delta_CHB_I-V.fits", overwrite=True)
  fits.PrimaryHDU(
      header=hdu_V.header,
      data=hdu_R.data - hdu_V.data
  ).writeto("Delta_CHB_R-V.fits", overwrite=True)
  fits.PrimaryHDU(
      header=hdu_V.header,
      data=hdu_R.data - hdu_I.data
  ).writeto("Delta_CHB_R-I.fits", overwrite=True)
#+end_src

Now, we can make a color image

#+name: rgb-limits-extinction
| Delta_CHB_R-I.fits   | -0.3 | 1.5 | sqrt   |
| C_H_beta-bin001.fits |    0 | 1.7 | linear |
| Delta_CHB_I-V.fits   | -0.1 | 0.8 | sqrt   |


#+name: rgb-lupton-extinction
#+header: :var TAB=rgb-limits-extinction  DATADIR="../data/orion-muse"
#+header: :var STARS=star-coords HDU="SCALED"
#+begin_src python :results file :return figfile
  import numpy as np
  import matplotlib.pyplot as plt
  from astropy.visualization import make_lupton_rgb
  from astropy.visualization.lupton_rgb import LinearMapping
  from astropy.io import fits
  from astropy.wcs import WCS

  # Unpack the channel info from the table
  [rf, r1, r2, rscale], [gf, g1, g2, gscale], [bf, b1, b2, bscale] = TAB

  def load_and_scale_image(fn, v1, v2, scale, ihdu=HDU):
      data = fits.open(f"{DATADIR}/{fn}")[ihdu].data
      im = (data - v1) / (v2 - v1)
      if "sqrt" in scale.lower():
          im = np.sqrt(im)
      return im


  w = WCS(fits.open(f"{DATADIR}/{rf}")[HDU]).celestial

  image_r = load_and_scale_image(rf, r1, r2, rscale)
  image_g = load_and_scale_image(gf, g1, g2, gscale)
  image_b = load_and_scale_image(bf, b1, b2, bscale)
  image = LinearMapping(0.0, 1.0).make_rgb_image(image_r, image_g, image_b)

  figfile = f"rgb-lupton-extinction.jpg"
  fig, ax = plt.subplots(figsize=(6.2, 5), subplot_kw=dict(projection=w))
  ax.imshow(image)
  for _, ra, dec, size in STARS:
      ax.scatter(ra, dec, transform=ax.get_transform("icrs"), s=0.6*size, ec="yellow", fc="none")
  ax.set(xlabel="RA (J2000)", ylabel="Dec (J2000)")
  fig.tight_layout(rect=[0.08, 0.07, 1.0, 1.0])
  fig.savefig(figfile, dpi=200)
#+end_src

#+RESULTS: rgb-lupton-extinction
[[file:rgb-lupton-extinction.jpg]]
***** DONE Spatial binning of the extinction anomalies
CLOSED: [2019-09-07 Sat 09:02]
This is a bit daft since some of them are already binned, but never mind

#+begin_src sh :results verbatim
  MULTIBIN=/Users/will/Dropbox/multibin-maps/multibin-map.py
  cd ../data/orion-muse
  for map in Delta_CHB_*.fits C_H_beta_Radio.fits; do
      python $MULTIBIN $map
  done
#+end_src

#+RESULTS:
#+begin_example
Saving Delta_CHB_I-V-bin001.fits
Saving Delta_CHB_I-V-bin002.fits
Saving Delta_CHB_I-V-bin004.fits
Saving Delta_CHB_I-V-bin008.fits
Saving Delta_CHB_I-V-bin016.fits
Saving Delta_CHB_I-V-bin032.fits
Saving Delta_CHB_I-V-bin064.fits
Saving Delta_CHB_I-V-bin128.fits
Saving Delta_CHB_I-V-bin256.fits
Saving Delta_CHB_R-I-bin001.fits
Saving Delta_CHB_R-I-bin002.fits
Saving Delta_CHB_R-I-bin004.fits
Saving Delta_CHB_R-I-bin008.fits
Saving Delta_CHB_R-I-bin016.fits
Saving Delta_CHB_R-I-bin032.fits
Saving Delta_CHB_R-I-bin064.fits
Saving Delta_CHB_R-I-bin128.fits
Saving Delta_CHB_R-I-bin256.fits
Saving Delta_CHB_R-V-bin001.fits
Saving Delta_CHB_R-V-bin002.fits
Saving Delta_CHB_R-V-bin004.fits
Saving Delta_CHB_R-V-bin008.fits
Saving Delta_CHB_R-V-bin016.fits
Saving Delta_CHB_R-V-bin032.fits
Saving Delta_CHB_R-V-bin064.fits
Saving Delta_CHB_R-V-bin128.fits
Saving Delta_CHB_R-V-bin256.fits
Saving C_H_beta_Radio-bin001.fits
Saving C_H_beta_Radio-bin002.fits
Saving C_H_beta_Radio-bin004.fits
Saving C_H_beta_Radio-bin008.fits
Saving C_H_beta_Radio-bin016.fits
Saving C_H_beta_Radio-bin032.fits
Saving C_H_beta_Radio-bin064.fits
Saving C_H_beta_Radio-bin128.fits
Saving C_H_beta_Radio-bin256.fits
#+end_example

***** DONE Histograms of extinction anomalies
CLOSED: [2019-09-07 Sat 09:02]
+ Compare Radio-infrared with Infrared-optical
+ These look like they need some spatial binning

#+name: extinct-anom-hist
#+header: :var SUFF="-bin001"
#+begin_src python :return figfile :results file
  import numpy as np
  from matplotlib import pyplot as plt
  import seaborn as sns
  from astropy.io import fits


  datadir = "../data/orion-muse"

  R_I = fits.open(f"{datadir}/Delta_CHB_R-I{SUFF}.fits")["SCALED"].data
  I_V = fits.open(f"{datadir}/Delta_CHB_I-V{SUFF}.fits")["SCALED"].data
  CHB = fits.open(f"{datadir}/C_H_beta_Radio{SUFF}.fits")["SCALED"].data

  xmin, xmax = -0.5, 1.
  ymin, ymax = -0.5, 1.

  m = np.isfinite(R_I*I_V*CHB) & (R_I > xmin) & (R_I < xmax) & (I_V > ymin) & (I_V < ymax) 
  m = m & ~(R_I*I_V*CHB == 0.0)
  x, y, w = R_I[m], I_V[m], CHB[m] - CHB[m].min()

  H, xedges, yedges = np.histogram2d(x, y, 31,
                                     [[xmin, xmax], [ymin, ymax]],
                                     weights=w**2, density=True)

  figfile = f"orion-extinction-anomalies-histogram{SUFF}.pdf"
  gamma = 1.5
  fig, ax = plt.subplots(figsize=(6, 6))
  ax.imshow(H.T**(1.0/gamma), extent=[xmin, xmax, ymin, ymax],
            interpolation="nearest", aspect="auto",
            origin="lower", cmap="viridis",
  )
  ax.set(
      xlim=[xmin, xmax],
      ylim=[ymin, ymax],
      xlabel="Radio-infrared",
      ylabel="Infrared-optical",
  )
  ax.set_aspect("equal")

  fig.tight_layout()
  fig.savefig(figfile)
#+end_src

#+RESULTS: extinct-anom-hist
[[file:orion-extinction-anomalies-histogram-bin001.pdf]]

#+call: extinct-anom-hist("-bin008")

#+RESULTS:
[[file:orion-extinction-anomalies-histogram-bin008.pdf]]

#+call: extinct-anom-hist("-bin016")

#+RESULTS:
[[file:orion-extinction-anomalies-histogram-bin016.pdf]]

#+call: extinct-anom-hist("-bin032")

#+RESULTS:
[[file:orion-extinction-anomalies-histogram-bin032.pdf]]

***** DONE Scatter version of the same
CLOSED: [2019-09-07 Sat 09:03]
+ These are better than the histograms
+ bin032 is the best
+ Color and point size map to Radio-Ha C(H\beta)
#+name: extinct-anom-scat
#+header: :var SUFF="-bin032"
#+begin_src python :return figfile :results file
  import numpy as np
  from matplotlib import pyplot as plt
  import seaborn as sns
  from astropy.io import fits


  datadir = "../data/orion-muse"

  R_I = fits.open(f"{datadir}/Delta_CHB_R-I{SUFF}.fits")["SCALED"].data
  I_V = fits.open(f"{datadir}/Delta_CHB_I-V{SUFF}.fits")["SCALED"].data
  CHB = fits.open(f"{datadir}/C_H_beta_Radio{SUFF}.fits")["SCALED"].data

  xmin, xmax = -0.4, 1.0
  ymin, ymax = -0.4, 0.6

  m = np.isfinite(R_I*I_V*CHB) & (R_I > xmin) & (R_I < xmax) & (I_V > ymin) & (I_V < ymax) 
  m = m & ~(R_I*I_V*CHB == 0.0)
  x, y, w = R_I[m], I_V[m], CHB[m] - CHB[m].min()

  # Get rid of repeated values
  x, y, w = np.unique(np.stack((x, y, w)), axis=-1)

  figfile = f"orion-extinction-anomalies-scatter{SUFF}.pdf"
  gamma = 1.5
  fig, ax = plt.subplots(figsize=(7, 5))
  ax.scatter(x, y, s=10*(0.5 + w**2), c=w**1.5, alpha=0.6, edgecolor="none", cmap="magma_r")
  ax.set(
      xlim=[xmin, xmax],
      ylim=[ymin, ymax],
      xlabel="Radio-infrared",
      ylabel="Infrared-optical",
  )
  ax.set_aspect("equal")

  fig.tight_layout()
  fig.savefig(figfile)
#+end_src

#+RESULTS: extinct-anom-scat
[[file:orion-extinction-anomalies-scatter-bin032.pdf]]

#+call: extinct-anom-scat("-bin016")

#+RESULTS:
[[file:orion-extinction-anomalies-scatter-bin016.jpg]]

#+call: extinct-anom-scat("-bin064")

#+RESULTS:
[[file:orion-extinction-anomalies-scatter-bin064.jpg]]

**** Figure to compare Raman, [O I], and CO

#+name: compare-oi-co-raman
#+header: :var STARS=star-coords
#+begin_src python :return figfile :results file
  import numpy as np
  import matplotlib.pyplot as plt
  from astropy.io import fits
  from astropy.wcs import WCS
  from astropy.convolution import convolve_fft, Gaussian2DKernel

  figfile = "raman-with-co-oi-contours.jpg"
  datapath = "../data/orion-muse"
  hdu = fits.open(f"{datapath}/muse-hr-data-ha-raman-TOTAL-multibin-1000.fits")["SCALED"]
  w = WCS(hdu.header)

  COpath = "../../OrionMolecular/Carma-NRO-CO/dataverse_files"
  hdu_redCO = fits.open(f"{COpath}/mom0_48_57_12co_pix_2_Tmb.fits")[0]
  hdu_greenCO = fits.open(f"{COpath}/mom0_38_47_12co_pix_2_Tmb.fits")[0]
  hdu_blueCO = fits.open(f"{COpath}/mom0_28_37_12co_pix_2_Tmb.fits")[0]
  w_CO = WCS(hdu_greenCO).celestial
  levels_CO = [300, 350, 400, 450]
  hdu_OI = fits.open(f"{datapath}/linesum-O_I-6300-bin001.fits")["SCALED"]
  smooth_OI = convolve_fft(hdu_OI.data, Gaussian2DKernel(stddev=5))
  w_OI = WCS(hdu_OI)
  levels_OI = [5e4, 1e5]

  fig, ax = plt.subplots(figsize=(6.2, 5), subplot_kw=dict(projection=w))
  ax.imshow(hdu.data, vmin=1200, vmax=5000, origin="lower", cmap="viridis")
  ax.contour(hdu_redCO.data[0, :, :],
             levels=levels_CO, linewidths=[0.5, 1.0, 1.5, 2.0],
             transform=ax.get_transform(w_CO),
             colors="red")
  ax.contour(hdu_greenCO.data[0, :, :],
             levels=levels_CO, linewidths=[0.3, 0.6, 0.9, 1.2],
             transform=ax.get_transform(w_CO),
             colors="magenta")
  ax.contour(hdu_blueCO.data[0, :, :],
             levels=[250] + levels_CO[:-1], linewidths=[0.3, 0.6, 0.9, 1.2],
             transform=ax.get_transform(w_CO),
             colors="cyan")
  ax.contour(smooth_OI,
             levels=levels_OI,  linewidths=[0.5, 1.0],
  #           transform=ax.get_transform(w_OI),
             colors="orange")
  for _, ra, dec, size in STARS:
      ax.scatter(ra, dec, transform=ax.get_transform("icrs"), s=0.6*size, ec="white", fc="none")
  ny, nx = hdu.data.shape
  ax.set(xlim=[0, nx+1], ylim=[0, ny+1], xlabel="RA (J2000)", ylabel="Dec (J2000)")
  fig.tight_layout(rect=[0.08, 0.07, 1.0, 1.0])
  fig.savefig(figfile, dpi=200)
#+end_src

#+RESULTS: compare-oi-co-raman
[[file:raman-with-co-oi-contours.jpg]]


**** Do the profile cuts of Bar and Orion S
+ This will be fun
  + We can make a "Sky Offset" frame, centered about a point in the bar and with a rotation so that ~lon~ is along the bar and ~lat~ is perpendicular


#+begin_src python :eval no :tangle ../src/bar-profile.py
  import json
  import sys
  import numpy as np
  from astropy.io import fits
  from astropy.wcs import WCS
  from astropy.coordinates import SkyCoord
  import astropy.units as u
  from matplotlib import pyplot as plt
  import seaborn as sns
  import statsmodels.api as sm

  try:
      INFILE, DATAPATH = sys.argv[1], sys.argv[2]
      HDU, NBLOCK, NORM = sys.argv[3], int(sys.argv[4]), sys.argv[5]
  except:
      sys.exit(f"Usage: {sys.argv[0]} INFILE DATAPATH HDU NBLOCK NORM (not {sys.argv[1:]})")

  try:
      HDU = int(HDU)
  except:
      pass

  # Origin of Bar offset frame
  c0 = SkyCoord(83.8418691, -5.4113246, unit=(u.deg, u.deg))
  # Position angle perp to Bar (away from Trapezium)
  PA = 141.5*u.deg
  bar_frame = c0.skyoffset_frame(rotation=PA)

  hdu = fits.open(f"{DATAPATH}/{INFILE}")[HDU]
  w = WCS(hdu).celestial

  # Make sure we have 2d image, not 3d cube
  if len(hdu.data.shape) == 3:
      hdu.data = hdu.data[0, :, :]

  # Find coordinates of all pixels in image
  ny, nx = hdu.data.shape
  xpix, ypix = np.meshgrid(np.arange(nx), np.arange(ny))
  c = w.pixel_to_world(xpix, ypix)

  # Transform to the Bar offset frame (lon is along bar, lat is perpendicular)
  cb = c.transform_to(bar_frame)

  # Take a 75 arcsec section of bar
  mask = np.abs(cb.lon) < (75.0/2.0)*u.arcsec

  # For the PDR lines, we restrict to the SW end
  if "H2-" in INFILE or "C_I" in INFILE:
      mask = (cb.lon > 7*u.arcsec) & (cb.lon < 60*u.arcsec)

  # And +/- 1 arcmin in perp direction
  mask = mask & (np.abs(cb.lat) < 1.0*u.arcmin)


  # offset in arcseconds perp to bar
  x = cb[mask].lat.to(u.arcsec).value
  # and parallel
  y = cb[mask].lon.to(u.arcsec).value
  # brightness
  s = hdu.data[mask]

  # Sort them all by x
  indices = np.argsort(x)
  x = x[indices]
  y = y[indices]
  s = s[indices]

  # scale by median by default
  if "median" in NORM.lower():
      s /= np.nanmedian(s)

  # Calculate blockwise medians
  nblock = NBLOCK
  # Discard any extra points off the end
  n = nblock*(len(x) // nblock)
  xm = np.nanmedian(x[:n].reshape((-1, nblock)), axis=-1)
  sm = np.nanmedian(s[:n].reshape((-1, nblock)), axis=-1)

  jsonfile = INFILE.replace(".fits", "-bar-profile.json")
  with open(jsonfile, "w") as f:
      json.dump(
          {"offset": list(xm.astype(float)), "brightness": list(sm.astype(float))},
          f, indent=3)

  # Plot s(x)
  figfile = INFILE.replace(".fits", "-bar-profile.jpg")
  fig, ax = plt.subplots()
  ax.scatter(x, s, s=3.0, c=y,
             alpha=0.3, marker=".", edgecolors="none", cmap="cool",
  )
  ax.plot(xm, sm, '-', color="k")
  ax.set(
      xlabel="Offset, arcsec",
      yscale="linear",
      ylim=[0.0, 2.0*np.nanmax(sm)],
  )
  ax.set_xscale("symlog", linthreshx=10, linscalex=0.5, subsx=[2, 3, 4, 5, 6, 7, 8, 9])
  sns.despine()
  fig.savefig(figfile, dpi=600)

  print(figfile, end="")

#+end_src

#+name: bar-profile
#+header: :var INFILE="linesum-O_I-6300-bin001.fits"
#+header: :var DATAPATH="../data/orion-muse" HDU="SCALED" NBLOCK=500 NORM="median"
#+begin_src sh :results file
python ../src/bar-profile.py $INFILE $DATAPATH $HDU $NBLOCK $NORM
#+end_src

#+RESULTS: bar-profile
[[file:linesum-O_I-6300-bin001-bar-profile.jpg]]

#+call: bar-profile(INFILE="linesum-blue-C_I-8727-multibin-500.fits", NBLOCK=200)

#+RESULTS:
[[file:linesum-blue-C_I-8727-multibin-500-bar-profile.jpg]]

#+call: bar-profile(INFILE="linesum-blue-C_I-8727-bin008.fits")

#+RESULTS:
[[file:linesum-blue-C_I-8727-bin008-bar-profile.jpg]]



#+call: bar-profile(INFILE="linesum-O_I-8446-bin001.fits")

#+RESULTS:
[[file:linesum-O_I-8446-bin001-bar-profile.jpg]]

#+call: bar-profile(INFILE="linesum-O_II-7318-bin001.fits")

#+RESULTS:
[[file:linesum-O_II-7318-bin001-bar-profile.jpg]]

#+call: bar-profile(INFILE="linesum-O_III-5007-bin001.fits")

#+RESULTS:
[[file:linesum-O_III-5007-bin001-bar-profile.jpg]]

#+call: bar-profile(INFILE="muse-hr-data-ha-raman-TOTAL-multibin-1000.fits")

#+RESULTS:
[[file:muse-hr-data-ha-raman-TOTAL-multibin-1000-bar-profile.jpg]]

#+call: bar-profile(INFILE="muse-hr-data-ha-raman-R040-cont-sub-multibin-1000.fits", NORM="no")

#+RESULTS:
[[file:muse-hr-data-ha-raman-R040-cont-sub-multibin-1000-bar-profile.jpg]]

#+call: bar-profile(INFILE="muse-hr-data-ha-raman-R058-cont-sub-multibin-1000.fits", NORM="no")

#+RESULTS:
[[file:muse-hr-data-ha-raman-R058-cont-sub-multibin-1000-bar-profile.jpg]]

#+call: bar-profile(INFILE="muse-hr-data-ha-raman-R087-cont-sub-multibin-1000.fits", NORM="no")

#+RESULTS:
[[file:muse-hr-data-ha-raman-R087-cont-sub-multibin-1000-bar-profile.jpg]]

#+call: bar-profile(INFILE="muse-hr-data-ha-raman-R136-cont-sub-multibin-1000.fits", NORM="no")

#+RESULTS:
[[file:muse-hr-data-ha-raman-R136-cont-sub-multibin-1000-bar-profile.jpg]]

#+call: bar-profile(INFILE="muse-hr-data-ha-raman-B033-cont-sub-multibin-1000.fits", NORM="no")

#+RESULTS:
[[file:muse-hr-data-ha-raman-B033-cont-sub-multibin-1000-bar-profile.jpg]]

#+call: bar-profile(INFILE="muse-hr-data-ha-raman-B054-cont-sub-multibin-1000.fits", NORM="no")

#+RESULTS:
[[file:muse-hr-data-ha-raman-B054-cont-sub-multibin-1000-bar-profile.jpg]]

#+call: bar-profile(INFILE="muse-hr-data-ha-raman-B080-cont-sub-multibin-1000.fits", NORM="no")

#+RESULTS:
[[file:muse-hr-data-ha-raman-B080-cont-sub-multibin-1000-bar-profile.jpg]]

#+call: bar-profile(INFILE="muse-hr-data-ha-raman-B133-cont-sub-multibin-1000.fits", NORM="no")

#+RESULTS:
[[file:muse-hr-data-ha-raman-B133-cont-sub-multibin-1000-bar-profile.jpg]]

#+call: bar-profile(INFILE="continuum-N_III-6634-bin001.fits")

#+RESULTS:
[[file:continuum-N_III-6634-bin001-bar-profile.jpg]]

#+call: bar-profile(INFILE="linesum-H_I-9229-bin001.fits")

#+RESULTS:
[[file:linesum-H_I-9229-bin001-bar-profile.jpg]]

#+call: bar-profile(INFILE="linesum-He_I-6678-bin001.fits")

#+RESULTS:
[[file:linesum-He_I-6678-bin001-bar-profile.jpg]]


#+call: bar-profile(INFILE="linesum-Ar_III-7136-bin001.fits")

#+RESULTS:
[[file:linesum-Ar_III-7136-bin001-bar-profile.jpg]]

#+call: bar-profile(INFILE="linesum-S_III-9069-bin001.fits")

#+RESULTS:
[[file:linesum-S_III-9069-bin001-bar-profile.jpg]]

#+call: bar-profile(DATAPATH="../../OrionMolecular/Carma-NRO-CO/dataverse_files", INFILE="mom0_48_57_12co_pix_2_Tmb.fits", HDU=0, NBLOCK=30)

#+RESULTS:
[[file:mom0_48_57_12co_pix_2_Tmb-bar-profile.jpg]]

#+call: bar-profile(DATAPATH="../../OrionMolecular/Carma-NRO-CO/dataverse_files", INFILE="mom0_87_109_13co_pix_2_Tmb.fits", HDU=0, NBLOCK=30)

#+RESULTS:
[[file:mom0_87_109_13co_pix_2_Tmb-bar-profile.jpg]]

What is wrong with these IRAC images that we get so many NaNs in the profiles? /Answer:/ they were the wrong files - sorted now.

#+call: bar-profile(DATAPATH="../data/orion-hawki", INFILE="Orion-Bar-H2-minus-060-Brg.fits", HDU=1, NBLOCK=1000)

#+RESULTS:
[[file:Orion-Bar-H2-minus-060-Brg-bar-profile.jpg]]

#+call: bar-profile(DATAPATH="../../dust-wave-case-studies/data/Orion-Spitzer-SuperMosaic", INFILE="40044081.40044081-89-short.IRAC.1.mosaic.fits", HDU=0, NBLOCK=100, NORM="no")

#+RESULTS:
[[file:40044081.40044081-89-short.IRAC.1.mosaic-bar-profile.jpg]]

#+call: bar-profile(DATAPATH="../../dust-wave-case-studies/data/Orion-Spitzer-SuperMosaic", INFILE="40044081.40044081-89-short.IRAC.4.mosaic.fits", HDU=0, NBLOCK=100, NORM="no")

#+RESULTS:
[[file:40044081.40044081-89-short.IRAC.4.mosaic-bar-profile.jpg]]

#+call: bar-profile(DATAPATH="../../dust-wave-case-studies/data/Orion-Spitzer-SuperMosaic", INFILE="40044081.40044081-89-short.IRAC.2.mosaic.fits", HDU=0, NBLOCK=100, NORM="no")

#+RESULTS:
[[file:40044081.40044081-89-short.IRAC.2.mosaic-bar-profile.jpg]]

#+call: bar-profile(DATAPATH="../../dust-wave-case-studies/data/Orion-Spitzer-SuperMosaic", INFILE="40044081.40044081-89-short.IRAC.3.mosaic.fits", HDU=0, NBLOCK=100, NORM="no")

#+RESULTS:
[[file:40044081.40044081-89-short.IRAC.3.mosaic-bar-profile.jpg]]


#+call: bar-profile(INFILE="muse-derived-Ne-multibin-SN0003.fits", NORM="no")

#+RESULTS:
[[file:muse-derived-Ne-multibin-SN0003-bar-profile.jpg]]

#+call: bar-profile(INFILE="muse-derived-Ne-iii-multibin-SN0003.fits", NORM="no")

#+RESULTS:
[[file:muse-derived-Ne-iii-multibin-SN0003-bar-profile.jpg]]

#+call: bar-profile(INFILE="muse-derived-Te-multibin-SN0003.fits", NORM="no")

#+RESULTS:
[[file:muse-derived-Te-multibin-SN0003-bar-profile.jpg]]

#+call: bar-profile(INFILE="muse-derived-Te-iii-multibin-SN0003.fits", NORM="no")

#+RESULTS:
[[file:muse-derived-Te-iii-multibin-SN0003-bar-profile.jpg]]

**** Combined plot of all the Bar profiles

#+begin_src python :return figfile :results file
  import json
  import numpy as np
  from matplotlib import pyplot as plt
  import seaborn as sns

  sns.set_color_codes("bright")

  PC_PER_ARCSEC = 2e-3

  def load_data(jsonfile):
      "Returns offset(mpc) and brightness"
      data = json.load(open(jsonfile))
      return 1000*np.array(data["offset"])*PC_PER_ARCSEC, np.array(data["brightness"])


  def xmap(x, scale_pc=0.1):
      """Map parsecs to scaled asinh"""
      return np.arcsinh(x/scale_pc)

  figfile = "raman-bar-multi-profile.pdf"
  fig, [ax2, ax] = plt.subplots(2, 1, figsize=(8, 6), sharex=True)

  emlines = [
      ["O_III-5007", 7, 2.2, 0.5, r"[O III] $\lambda 5007$"], 
      ["O_II-7318",  2.5, 1.25, 0.7, r"[O II] $\lambda 7318$"], 
      ["O_I-6300",   1.0, 1.0, 0.9, r"[O I] $\lambda 6300$"], 
      ["O_I-8446",   0.0, 1.0, 1.1, r"O I $\lambda 8446$"], 
  ]

  raman_bands = [
      ["B033", "R040", 0.6, "b", "m", 36],
      ["B054", "R058", 0.4, "b", "m", 56],
      ["B080", "R087", 0.4, "c", "r", 83],
      ["B133", "R136", 0.2, "c", "r", 134],
  ]

  molecules = [
      ["mom0_87_109_13co_pix_2_Tmb", 0.0, 5.5, 1.0, "$^{13}$CO (1-0)"],
      ["mom0_48_57_12co_pix_2_Tmb", 0.0, 4.0, 1.5, "$^{12}$CO (1-0)"],
      ["linesum-blue-C_I-8727-multibin-500", 0.0, 4.0, 2, r"[C I] $\lambda 8727$"],
      ["Orion-Bar-H2-minus-060-Brg", -13.0, 13.0, 2.5, r"H$_{2}$ 2.21$\,\mu$m"],
  ]

  infrared = [
      ["IRAC.1", 0.038, "$3.6\, \mu$m"],
      ["IRAC.3", 0.0044, "$5.8\, \mu$m"],
      ["IRAC.4", 0.001, "$8.0\, \mu$m"],
  ]

  whitebox = dict(facecolor="white", edgecolor="none", boxstyle="round,pad=0.2")
  for lineid, offset, scale, lw, label in emlines:
      x, y = load_data(f"linesum-{lineid}-bin001-bar-profile.json")
      m = x < 30
      ax.plot(x[m], scale*y[m] + offset, color="k", lw=lw)
      x0 = -40 - 5*offset
      i0 = np.sum(x < x0)
      y0 = y[i0]
      ax.text(x0, scale*y0 + offset,
              f"{offset:.1f} + {label}",
              bbox=whitebox, ha="center", va="center", fontsize="small")
  ax.text(-50.0, 8.0, "Optical emission lines", ha="center", fontsize="small")

  for bandid, scale, label in infrared:
      x, y = load_data(f"40044081.40044081-89-short.{bandid}.mosaic-bar-profile.json")
      m = x > -10
      ax.fill_between(x[m], y[m]*scale, color="k", alpha=0.07, zorder=-100)
      x0 = 3
      i0 = np.sum(x < x0)
      y0 = y[i0]
      ax.text(x0+2, 0.97*scale*y0,
              f"{label}",
              bbox=whitebox, ha="left", va="top", fontsize="small")
  ax.text(10, 15.0, "IR continuum", ha="center", bbox=whitebox, fontsize="small")

  for lineid, offset, scale, lw, label in molecules:
      x, y = load_data(f"{lineid}-bar-profile.json")
      m = x > 10
      ax.plot(x[m], y[m]*scale + offset, color="k", lw=lw, alpha=0.3)
      x0 = 75
      i0 = np.sum(x < x0)
      y0 = y[i0]
      ax.text(x0, scale*y0 + offset,
              f"{label}",
              bbox=whitebox, ha="center", va="center", fontsize="small")
  ax.text(75, 11.0, "PDR emission lines", bbox=whitebox, ha="center", fontsize="small")


  raman_fmt = "muse-hr-data-ha-raman-{}-cont-sub-multibin-1000-bar-profile.json"
  for blue, red, alpha, cb, cr, wav in raman_bands:
      xb, yb = load_data(raman_fmt.format(blue)) 
      xr, yr = load_data(raman_fmt.format(red))
      ax2.plot(xb, yb, color=cb, alpha=alpha, lw=2)
      ax2.plot(xr, yr, color=cr, alpha=alpha, lw=2)
      x0 = -40
      i0 = np.sum(xb < x0)
      y0 = (yb[i0] + yr[i0])/2
      ax2.text(x0, y0,
               fr"$\Delta\lambda \approx \pm{wav}$ Å",
               bbox=whitebox, ha="center", va="center", fontsize="small")
  ax2.text(-40.0, 350, "Raman wings", ha="center", fontsize="small")

  ax.text(-50, 16.5, "IONIZED", ha="center")
  ax.text(15, 16.5, "NEUTRAL", ha="center")
  ax.text(50, 16.5, "MOLECULAR", ha="center")

  ax.axvline(ls=":")
  ax2.axvline(ls=":")
  ax.set(
      xlim=[-95, 95],
      ylim=[0, None],
      #yscale="log",
      xlabel="Position relative to Bar, $10^{-3}$ pc",
      ylabel="Constant + Intensity (arbitrary units)",
  )
  ax.minorticks_on()
  ax2.set(
      ylim=[0, None],
  )
  sns.despine()
  fig.tight_layout(h_pad=0.0)
  fig.savefig(figfile)
#+end_src

#+RESULTS:
[[file:raman-bar-multi-profile.pdf]]


**** Secondary profiles

#+call: bar-profile(INFILE="linesum-C_I-8727-bin016.fits")

#+RESULTS:
[[file:linesum-C_I-8727-bin016-bar-profile.jpg]]

#+call: bar-profile(INFILE="linesum-Cl_IV-7531-bin016.fits")

#+RESULTS:
[[file:linesum-Cl_IV-7531-bin016-bar-profile.jpg]]

#+call: bar-profile(INFILE="muse-hr-image-wfc3-f547m.fits", HDU="DATA")

#+RESULTS:
[[file:muse-hr-image-wfc3-f547m-bar-profile.jpg]]

#+call: bar-profile(INFILE="continuum-N_III-6634-bin001.fits")

#+RESULTS:
[[file:continuum-N_III-6634-bin001-bar-profile.jpg]]

#+call: bar-profile(INFILE="continuum-DIB-5781-bin001.fits")

#+RESULTS:
[[file:continuum-DIB-5781-bin001-bar-profile.jpg]]

#+call: bar-profile(INFILE="C_H_beta-bin001.fits")

#+RESULTS:
[[file:C_H_beta-bin001-bar-profile.jpg]]

#+call: bar-profile(INFILE="C_H_beta_9229-bin001.fits")

#+RESULTS:
[[file:C_H_beta_9229-bin001-bar-profile.jpg]]


**** Isolating the H_2 emission
+ Easiest way is to subtract Br\gamma from H_2 filter
+ That will eliminate the continuum hopefully, but will have negative values where there is ionized emission
+ We could do something cleverer using the broad K band as well
+ Files are
  + H_2 - ~HAWKI.2007-12-02T06_20_16.351.fits~
  + Br\gamma - ~HAWKI.2007-12-02T06:40:00.862.fits~
  + Ks - ~HAWKI.2008-11-09T06:42:26.928.fits~

#+begin_src python :results output verbatim
  import numpy as np
  from astropy.io import fits

  datadir = "../data/orion-hawki/"

  hdu_h2 = fits.open(f"{datadir}/HAWKI.2007-12-02T06_20_16.351.fits")["CHIP1.INT1"]
  hdu_br = fits.open(f"{datadir}/HAWKI.2007-12-02T06:40:00.862.fits")["CHIP1.INT1"]

  hdu_h2.data -= 0.45*hdu_br.data
  hdu_h2.writeto(f"{datadir}/Orion-Bar-H2-minus-045-Brg.fits",
                 output_verify="fix",
                 overwrite=True,
  )
#+end_src

#+begin_src python :results output verbatim
  import numpy as np
  from astropy.io import fits

  datadir = "../data/orion-hawki/"

  hdu_h2 = fits.open(f"{datadir}/HAWKI.2007-12-02T06_20_16.351.fits")["CHIP4.INT1"]
  hdu_br = fits.open(f"{datadir}/HAWKI.2007-12-02T06:40:00.862.fits")["CHIP4.INT1"]

  hdu_h2.data -= 0.45*hdu_br.data
  hdu_h2.writeto(f"{datadir}/Orion-CHIP4-H2-minus-045-Brg.fits",
                 output_verify="fix",
                 overwrite=True,
  )
#+end_src

#+RESULTS:

*** The supposed Si II fluoresced bump
+ Dopita sees this at 6470 \to 6480
+ We see nothing there
+ But we do see a bulge at 6530 near the bar
*** Other H lines
+ H beta has the wings
+ Paschen line are too weak to see the wings, and too many other lines in the way


*** Other weak lines in range
+ 6401 [Ni III] + Ne I
  + Check if [Ni III] 6401/6534 tells us something
+ 6462 C II recomb
+ 6666 [Ni II]
+ Another notch at 6530, or a gap between two lines
  + There is [N II] 6527 and [Ni III] 6534
  + Those two lines are clearly seen in Dopita spectra
  + And in MUSE spectra too
+ [ ] 6544.3 seen in SPM spectra - what is it?
+ 6700 + 6706 in R136 band
  + He I 6699.394473 - could be
  + There are some N I lines around 6706 and also 6722, but the upper level is at just over one Ryd so it can't be
  + There are some Fe II lines that might be it 6704.88, 6706.25 - one of the same multiplet is at 6534.314, which is same wavelength as [Ni III] 6533.80
+ B133 band
  + Lots of stellar absorption lines at 6450 and below
  + Possibly a weak line at 6440.35
  + But these are negligible contribution
*** What H\alpha rest wavelength to use
+ The Raman scattering has to be 1s \to 3p \to 2s by E1 selection rule (\Delta\ell = \pm1)
+ 
** TODO [#A] The [C I] line
Fit the continuum and remove it
** Relation with foreground extinction
+ Show that the 6634 feature is not correlated with reddening
+ But the other DIB features are - maybe
*** TODO [#A] Extinction at the Bright Bar
+ Compare 6563/4681 with 7136/7751 and 9229/6563
+ Strange dip in Raman brightness at the bar
  + Is this caused by dust in ionized gas (will cause big drop in source function)
*** Correlation between the different reddening measures 
*** Correlation between reddening and DIB
** Stellar absorption lines
+ The low-mass stars have absorption lines too
  + 6663 - Si III
  + 6634 - N III - shows up in a few stars
    + 219-355 - 5:35:21.8801 -5:23:54.789
    + 159-350 - 5:35:15.8718 -5:23:48.515
    + 210-349 - 5:35:21.0189 -5:23:48.808
      + Narrow line at 6635
      + Also, 6593, 6609.5, 6663.9, 6708.1
    + 181-245 - 5:35:18.0745 -5:22:45.107
    + 
  + 6496 - shows up nearly everywhere
    + Accompanied by weaker lines: 6483, 6463, 6451, 6440, 6421, 6402, etc

** Comparison with other lines in Orion S
+ CO has peak at around +9 km/s LSR = 28 km/s heliocentric
  + Kong:2018a
  + There is a blue wing, but that may be related to molecular outflow
+ [N I] line has peak at 29 km/s heliocentric
  + From Keck spectra of slit p79, assuming -4 km/s heliocentric correction

** Look at other Orion datasets
+ [X] Keck proplyd spectra
  + Unfortunately, we have an inter-order gap from 6622 \to 6649 \AA, which our line falls right in the middle of
  + /However/ the 6662.6 absorption line should be visible
    + Maybe see it on the following spectra
      + In Keck2, jw73b, j71b, j70b, j69b, j68b, j67b, j66b, j65b - last is best
        + C3 slit, which is 28 x 0.861 arcsec with R = 50,000
        + Also p79-ff, which is in Keck1 (C2 slit)
        + j65 and p79 are both from similar pointings called 150-353
        + This is the base of the HH 529 jet
      + Also in p73 clearly (170-337)
        + And in p74 super strong - but is it stellar? I think so - mainly from one star
        + In p77 (180-331) just about visible, but p87 has nothing
        + in p84 (244-440) is visible, but again looks like star although it could be disk
      + Distance between 6666.8 and 6678.15 is
        + 607 - 387 = 220 pix
        + 6678.15 - 6666.8 = 11.35 \AA
        + 0.0516 \AA per pix (= 2.32 km/s, sounds right)
      + Absorption feature ranges between [308, 324], so [-79, -63] pix from 6666.8
        + 6666.8 + [-79, -63] 0.0516 = [6662.7236, 6663.5492]
        + We wanted 6662.6, so it is a bit to red
        + Width is 0.8256 \AA = 37 km/s => 5.8 km/s
        + If line center is 6663.1364, then redshifted by 0.5 \AA = 3.5 km/s with respect to [Ni II]
          + That is, assuming that [Ni II] rest wavelength is accurate
          + This might be showing velocity shifts between ionization front and PDR
          + Including maybe back scattering, which gives double relative redshift
+ [X] Adal spectra
  + /Resolution in red is not as good as I thought/
    + Pixels are 0.83 \AA = 40 km/s at H\alpha, and resolution should be at best 2x this, so 80 km/s or R = 4000
    + This is very similar to MUSE, but not quite as good I don't think
  + We see it for POS 6 in Orion S - strangely not as deep as one might expect
  + POS 4 near Trapezium
  + POS 1 near Trapezium
  + POS 2 crosses Bright Bar
  + Blue spectra are all high resolution, but there are symmetrical ghosts around all the bright lines, which makes it impossible to see any possible wings on H beta for instance
+ [X] O'Dell & Harris
  + The spectral resolution is not very good - we do see the absorption, but only just
+ [X] Manuel PPAK spectra
  + Good example is [[file:~/Dropbox/RubinWFC3/Tsquared/manu-region-specplot-r-6600-6800-x-250-y-350-w0400-h0200.jpg][file:~/Dropbox/RubinWFC3/Tsquared/manu-region-specplot-r-6600-6800-x-250-y-350-w0400-h0200.jpg]]
+ [ ] STIS
  + I don't seem to have the files any more
    + I used to have a ~Work/HST-STIS~ folder, but seems to be missing - maybe on external disk
    + They do seem to be in ~/fs/nil/other0/will/orion-stis~ on linux server
  + Best bet would seem to be from Bally program GO8324
  + There is a 6581 \to 6867 \AA spectrum in a slit from LV2 to LV6, same as for the NUV lines
  + See [[file:~/Dropbox/STIS-LV/stis-lv.org][file:~/Dropbox/STIS-LV/stis-lv.org]]
+ Herbig's HIRES th1E spectra
  + Has same problem as other Keck data
** DONE [4/4] Brightness profiles of PDR emission
CLOSED: [2019-09-07 Sat 11:58]
+ [X] I have the CO from the Kong:2018a data
+ [X] I can get H_2 from HAWKI
+ [X] I can get dust/PAH from IRAC
  + Currently there is a problem with NaNs in the median profile
+ [X] I can get [C I] from MUSE
  + Requires better continuum subtraction on the wavsec6 cube but should be doable
  + There is no good continuum range
  + But the single wavelength at 8723.45 (pixel 646) is a local minimum, so as good as any
* Absorption at 6634 \AA in other regions
** TODO RCW 49
+ Illuminated by the massive cluster Westerlund 2, supposedly second most massive in Milky Way
+ Zeidler:2018a
+ They seem to have a lot of MUSE data - including deep fields
  + Now downloading to [[file:~/Work/Muse-Hii-Data/RCW49/][file:~/Work/Muse-Hii-Data/RCW49/]]
+ We see the 6614 absorption line, but that seems to be scattered stellar
  + Or DIB - see below
+ [2019-08-06 Tue 22:10] I don't see any evidence of the Raman scattering or the 6634 line in what I have looked at so far
** 30 Doradus: Tarantula
+ I see absolutely nothing
+ Files are at
  + [[file:~/Work/Muse-Hii-Data/30Dor]]
+ [2019-08-01 Thu]  *I do see the line!!*
+ Much weaker than Orion, but it looks very similar
+ We are looking in an 8x8 arcsec box
+ A good place is centered on 84.642977 -69.10802
+ Minimum absorption is at observed wavelength of 6638.74 and 6637.49 - about halfway between them, so 6638.1 \AA
+ So is rest wavelength is 6633.9 then V = +190 km/s, whereas [N II] is at +250
  + From below, we have a DIB with 6632.85, which would give 5.25 \AA or +240, which is much better
+ Absorption depth:
  + Mean: (193.36 - 188.56)/193.36 = 0.0248
  + Median: (186.45 - 181.59)/186.45 = 0.026
  + So less than 3%, whereas in Orion S it is up to 8%
*** Other lines with different behavior
+ Si III 5740 is seen in emission and absorption (in some stars)
+ DIB 5781 is seen in absorption everywhere - need to check if depth scales with reddening
+ 
+ He II 4686 broad emission line is seen everywhere
  + Can be used to track scattered starlight from the WR stars (there are about 3 of them in the A field)
  + Some stars have absorption in this line, but that doesn't seem to be imprinted on the nebula much
  + There is an artefact at 4688 \to 4691 \AA in the top center of field A
    + At first I thought there was some narrow absorption, but it is in bizarre horizontal stripes
    + Also around 6252 \AA in same region
*** Calculate 6634 absorption map for Tarantula

#+begin_src python
  import numpy as np
  from astropy.io import fits
  from astropy.wcs import WCS

  datadir = "/Users/will/Work/Muse-Hii-Data/30Dor"

  hdu = fits.open(f"{datadir}/ADP.2016-07-14T14:17:17.826.fits")["DATA"]

  slice_6634 = slice(1630, 1631)
  slice_cont = slice(1634, 1638)

  map_6634 = hdu.data[slice_6634, :, :].mean(axis=0)
  map_cont = hdu.data[slice_cont, :, :].mean(axis=0)

  ab_depth = 1.0 - map_6634/map_cont

  wcs = WCS(hdu.header).celestial
  for name, data in [
          ["6634-abs-depth", ab_depth],
          ["6634-line-map", map_6634],
          ["6634-cont-map", map_cont],
          ["6634-line-minus-cont-map", map_6634 - map_cont],
  ]:
      fits.PrimaryHDU(
          header=wcs.to_header(),
          data=data,
      ).writeto(f"../data/30-Dor-A-{name}.fits", overwrite=True)
#+end_src

#+RESULTS:
: None
** Carina
+ The cube I got was in a stupid place - need to get a better one
** TODO Other LMC regions
+ N44 and N180
  + See McLeod:2019a
  + Neither of these are the same as the Dopita ones

* Characteristics of Orion PDRs
+ Bright Bar
  + Edge on
+ Orion S

* Absorption line profile
+ Can we get a good handle on how broad it is
+ Make a mask that includes the best points (do this for each object)
+ Adjust the wavelengths according to the velocities maybe
  + This would give better sampling of the profile
  + But which line do we use? No guarantee that absorbing medium shares kinematics of the emitting gas, although in Carina this will probably be true
+ If width is not too small, could be DIB
  + The 6614 \AA DIB (which we don't see) has a width of 50 km/s or 1.1 \AA, which we would not well resolve (see Krelowski:2018a, pronounced KreWoVski because it is a ł)
  + In fact, Galazutdinov:2000a show a DIB at 6632.85, which might possibly be our feature
    + It isn't listed as new, so it must be in previous papers too
    + It is only seen in highly reddened stars, not in HD 23180
** DONE [#A] Co-adding Keck spectra to get a less noisy profile
CLOSED: [2019-08-24 Sat 22:09]
+ I could go through all the steps I did for the proplyd spectra
  + This would give a nicely calibrated, rectified spectrum
  + See [[id:46ACEA74-2E70-473B-9344-DF20000DB765][Extracting each line]] in Keck notes




* Antecedents for Raman scattering
** Raman scattering theory
+ Hubeny & Mihalas book
+ 
*** Terminology
+ Configuration is n, l for each electron
+ Term is n, S, L
+ Level is n, S, L, J
+ State is n, S, L, J, M_J
*** Wavelength mapping between Ly\beta and H\alpha domain
+ Let \nu_0 be pre-scattered and \nu_1 be post-scattered frequency
  + \Delta\nu_1 = \Delta\nu_0 for Raman scattering
  + \lambda_1 = c/\nu_1 => d\lambda_1/d\nu_1 = -c / \nu_1^2 = -\lambda_1^2 / c 
  + \Delta\lambda_1 = d\lambda_1/d\nu_1 \Delta\nu_1 = -\lambda_1^2 \Delta\nu_1 / c
  + \Delta\lambda_0 = -\lambda_0^2 \Delta\nu_0 / c
  + \Delta\lambda_1 / \Delta\lambda_0 = (\lambda_1^2 / \lambda_0^2) (\Delta\nu_1 / \Delta\nu_0) = (\lambda_1 / \lambda_0)^2
+ So wavelength differences \Delta\lambda transform as \lambda^2
+ And velocity differences \Delta{}u = c \Delta\lambda / \lambda scale as \lambda
+ Velocity-scale factor between Ly\beta and H\alpha is \lambda_1 / \lambda_0 = (1 - 1/9) / (1/4 - 1/9) = 6.4
+ Wavelength-scale factor is 40.96
*** Redo everything in vacuum wavenumbers
+ This is the only way that makes sense
**** DONE Mean wavelengths of Ly\beta and H\alpha
CLOSED: [2019-08-25 Sun 19:55]
Ly\beta - calculating wavnum from wav since it has much higher precision than 0.01 cm^-1
|  J_k |   g_k |            wav |     wavnum |
|-----+------+----------------+------------|
| 1.5 |   4. | 1025.721824823 | 97492.3196 |
| 0.5 |   2. | 1025.722965425 | 97492.2112 |
|-----+------+----------------+------------|
|     | Mean | 1025.722205020 | 97492.2835 |
#+TBLFM: $2=2 $1 + 1::$4=1e8/$3;f4::@4$2=Mean::@4$3=(@2 @2$2 + @3 @3$2) / (@2$2 + @3$2);f9::@4$4=(@2 @2$2 + @3 @3$2) / (@2$2 + @3$2);f4

Average frequency and wavenumber of H\alpha (2s \to 3p)
|                            |   |               | freq, cm^-1 | check freq |
|----------------------------+---+---------------+------------+------------|
| H I H\alpha 2s 2S_{1/2 }\to 3p 2P_{1/2} | 2 | 6564.58439369 |   15233.26 | 15233.2568 |
| H I H\alpha 2s 2S_{1/2 }\to 3p 2P_{3/2} | 4 | 6564.53767551 |   15233.37 | 15233.3652 |
|----------------------------+---+---------------+------------+------------|
| H I H\alpha 2s \to 3p             | 6 | 6564.55324823 |   15233.33 | 15233.3291 |
#+TBLFM: $5=1e8/$3 ; f4::@4$3=(2 @2  + 4 @3) / 6 ; f8::@4$4=(2 @2  + 4 @3) / 6 ; f2

Comparison with Clegg:1999a

Clegg reference wavelengths
| Ly\alpha | 1215.6841 | vac |
| Ly\beta | 1025.7335 |     |
| H\alpha  | 6562.8812 | air |

Fine-structure components are in his Tab 2a, but he has higher level first.  So for H\alpha fluoresced by Ly\beta, we want 3p \to 2s, which is indices 3 and 4. 

These have \Delta\lambda = -0.110 and -0.157 \AA respectively with respect to the reference wavelength (Tab 3). 

So, we have for H\alpha
| Index |                     |     \Delta\lambda |        \lambda | g |
|-------+---------------------+--------+----------+---|
|     3 | 3p 2P_{1/2} \to 2s 2S_{1/2} | -0.110 | 6562.771 | 2 |
|     4 | 3p 2P_{3/2} \to 2s 2S_{1/2} | -0.157 | 6562.724 | 4 |
|-------+---------------------+--------+----------+---|
|       |                     |        | 6562.740 |   |
#+TBLFM: $4=6562.8812 + $3;f3::@4$4=(2 @2  + 4 @3) / 6 ; f3

This is /exactly/ the same as the 6562.7404 that I derive below for the air wavelength. 


Note that Clegg says:
: We further assume that b_nlj = b_nl, with the values of b_nl being calculated as described above. This is equivalent to the assumption that the j-levels associated with a particular nl are populated according to their statistical weights (2j + 1).



**** DONE Application to the O I lines
CLOSED: [2019-08-24 Sat 22:12]

Compare O I lines with Ly \beta (average of doublet)
| Line                                  |     Wav, \AA | Freq, cm^-1 |   d freq |
|---------------------------------------+------------+------------+----------|
| H I Ly \beta  1s 2S_{1/2 }\to 3p 2P_{1/2,3/2}     | 1025.72220 |  97492.283 |    0.000 |
|---------------------------------------+------------+------------+----------|
| O I 2s^2 2p^4 3P_0 \to 2s^2 2p^3 (4S) 3d 3D_1 | 1028.15729 |  97261.383 | -230.900 |
|---------------------------------------+------------+------------+----------|
| O I 2s^2 2p^4 3P_1 \to 2s^2 2p^3 (4S) 3d 3D_1 | 1027.43139 |  97330.100 | -162.183 |
| O I 2s^2 2p^4 3P_1 \to 2s^2 2p^3 (4S) 3d 3D_2 | 1027.43077 |  97330.159 | -162.124 |
|---------------------------------------+------------+------------+----------|
| O I 2s^2 2p^4 3P_2 \to 2s^2 2p^3 (4S) 3d 3D_1 | 1025.76339 |  97488.369 |   -3.914 |
| O I 2s^2 2p^4 3P_2 \to 2s^2 2p^3 (4S) 3d 3D_2 | 1025.76276 |  97488.429 |   -3.854 |
| O I 2s^2 2p^4 3P_2 \to 2s^2 2p^3 (4S) 3d 3D_3 | 1025.76170 |  97488.530 |   -3.753 |
|---------------------------------------+------------+------------+----------|
#+TBLFM: $4=$3 - @2$3;f3::




O I Line transformed to H\alpha domain
|   H\alpha freq | d freq             | O I freq            | O I wav              |
|-----------+--------------------+---------------------+----------------------|
| 15233.329 | -230.900 +/- 0.008 | 15002.429 +/- 0.008 | 6665.5873 +/- 0.0036 |
| 15233.329 | -162.183 +/- 0.008 | 15071.146 +/- 0.008 | 6635.1955 +/- 0.0035 |
| 15233.329 | -162.124 +/- 0.008 | 15071.205 +/- 0.008 | 6635.1695 +/- 0.0035 |
| 15233.329 | -3.914 +/- 0.008   | 15229.415 +/- 0.008 | 6566.2404 +/- 0.0034 |
| 15233.329 | -3.854 +/- 0.008   | 15229.475 +/- 0.008 | 6566.2145 +/- 0.0034 |
| 15233.329 | -3.753 +/- 0.008   | 15229.576 +/- 0.008 | 6566.1710 +/- 0.0034 |
#+TBLFM: $3=$1 + $2;f3::$4=1e8 / $3;f4

Now convert back to air wavelengths
+ vac/air = 1 + 8.06051e-5 + 2.480990e-2 / (132.274 - (1e4/wav)**2) + 1.74557e-4 / (39.32957 - (1e4/wav)**2)
+ That is from Morton:2003b who cite Peck & Reeder (1972)

| Line           | vac                  | n                            | air                  |
|----------------+----------------------+------------------------------+----------------------|
| H\alpha 2s \to 3p     | 6564.553248          | 1.00027624                   | 6562.7404            |
| O I 3P_0 \to  3D_1 | 6665.5873 +/- 0.0036 | 1.00027612 +/- 3.5811244e-12 | 6663.7473 +/- 0.0036 |
| O I 3P_1 \to  3D_1 | 6635.1955 +/- 0.0035 | 1.00027616 +/- 3.5308534e-12 | 6633.3636 +/- 0.0035 |
| O I 3P_1 \to  3D_2 | 6635.1695 +/- 0.0035 | 1.00027616 +/- 3.5308959e-12 | 6633.3376 +/- 0.0035 |
| O I 3P_2 \to  3D_1 | 6566.2404 +/- 0.0034 | 1.00027623 +/- 3.5418312e-12 | 6564.4271 +/- 0.0034 |
| O I 3P_2 \to  3D_2 | 6566.2145 +/- 0.0034 | 1.00027623 +/- 3.5418741e-12 | 6564.4012 +/- 0.0034 |
| O I 3P_2 \to  3D_3 | 6566.1710 +/- 0.0034 | 1.00027623 +/- 3.5419462e-12 | 6564.3577 +/- 0.0034 |
#+TBLFM: $3=1 + 8.06051e-5 + (2.480990e-2 / (132.274 - (1e4/$2)**2)) + (1.74557e-4 / (39.32957 - (1e4/$2)**2)) ;f8::$4=$2/$3;f4

Accuracy in wavelength (0.003 to 0.004 \AA) corresponds to:
+ 0.16 km/s in H\alpha domain
+ 0.025 km/s in Raman domain !

Note that H\alpha is -2.27 km/s shifted with respect to the recombination value, which includes the 3d-2p, 3s-2p transitions. 



Mean wavelengths of blended components
|       wav | J_k | g_k |
|-----------+----+----|
| 6633.3636 |  1 |  3 |
| 6633.3376 |  2 |  5 |
|-----------+----+----|
| 6633.3474 |    |  1 |
#+TBLFM: $3=2 $2 + 1::@4$1=(@2$1 @2$3 + @3$1 @3$3)/(@2$3 + @3$3)

|       wav | J_k | g_k |
|-----------+----+----|
| 6564.4271 |  1 |  3 |
| 6564.4012 |  2 |  5 |
| 6564.3577 |  3 |  7 |
|-----------+----+----|
| 6564.3861 |    |  1 |
#+TBLFM: $3=2 $2 + 1::@5$1=(@2$1 @2$3 + @3$1 @3$3 + @4$1 @4$3)/(@2$3 + @3$3 + @4$3)


Final table
| Transition      |         \lambda_1 |  \nu_1, cm^-1 |      d \nu |        \nu_2 |       \lambda_2 |     \lambda_air |
|-----------------+------------+-----------+----------+-----------+----------+----------|
| H I {1,2}s \to 3p | 1025.72220 | 97492.283 |    0.000 | 15233.329 | 6564.553 | 6562.740 |
| O I J = 0 \to 1   | 1028.15729 | 97261.383 | -230.900 | 15002.429 | 6665.587 | 6663.747 |
| O I J = 1 \to 1   | 1027.43139 | 97330.100 | -162.183 | 15071.146 | 6635.196 | 6633.364 |
| O I J = 1 \to 2   | 1027.43077 | 97330.159 | -162.124 | 15071.205 | 6635.170 | 6633.338 |
| O I J = 2 \to 1   | 1025.76339 | 97488.369 |   -3.914 | 15229.415 | 6566.240 | 6564.427 |
| O I J = 2 \to 2   | 1025.76276 | 97488.429 |   -3.854 | 15229.475 | 6566.215 | 6564.401 |
| O I J = 2 \to 3   | 1025.76170 | 97488.530 |   -3.753 | 15229.576 | 6566.171 | 6564.358 |

Scale factors:
+ \nu_1/\nu_2 = 97492.283/15233.329 = 6.3999329 +/- 0.0000004
+ (\nu_1/\nu_2)^2 = 40.959141 +/- 0.000005


***** Lines in the blue wing
+ Possibility at air wavelength of
  + 6494.75

| Air             | n                            | Vac              | FUV                |
|-----------------+------------------------------+------------------+--------------------|
| 6494.75 +/- 0.5 | 1.00027632 +/- 5.3868098e-10 | 6496.54 +/- 0.50 | 1024.047 +/- 0.012 |
#+TBLFM: $2=1 + 8.06051e-5 + (2.480990e-2 / (132.274 - (1e4/$1)**2)) + (1.74557e-4 / (39.32957 - (1e4/$1)**2)) ;f8::$3=$1 $2;f2::$4=1/(1/$3 - 1/6564.553 + 1/1025.72220);f3
**** DONE Data from Peter's Atomic Line List with energies in wave numbers
CLOSED: [2019-08-24 Sat 22:12]
Ly \beta (vacuum)
: -LAB-WAVL-ANG-VAC-|-DLAM--|SPC-|TT|CONF-|-TERM--|-J_i-J_k-|--A_ki--|-TPF-|-LVL-EN--CM-1--|-REF---|
:    1025.721824823  1.0E-08  H I E1 1s-3p  2S-2Po 1/2 - 3/2 1.67E+08    28 0.00 - 97492.32 007
:    1025.722965425  1.0E-08  H I E1 1s-3p  2S-2Po 1/2 - 1/2 1.67E+08    28 0.00 - 97492.21 007

H \alpha (vacuum too)
: -LAB-WAVL-ANG-VAC-|-DLAM--|SPC-|TT|CONF-|-TERM--|-J_i-J_k-|--A_ki--|-TPF-|LEVEL-ENERGY--CM^-1|-REF---|
:    6564.52254639   3.9E-08  H I E1 2p-3d 2Po-2D  1/2 - 3/2 5.39E+07    28 82258.92 - 97492.32 007
:    6564.53767551   5.7E-08  H I E1 2s-3p  2S-2Po 1/2 - 3/2 2.24E+07    28 82258.95 - 97492.32 007
:    6564.56466153   4.1E-08  H I E1 2p-3s 2Po-2S  1/2 - 1/2 2.10E+06    28 82258.92 - 97492.22 007
:    6564.58439369   5.7E-08  H I E1 2s-3p  2S-2Po 1/2 - 1/2 2.24E+07    28 82258.95 - 97492.21 007
:    6564.66464918   3.9E-08  H I E1 2p-3d 2Po-2D  3/2 - 5/2 6.47E+07    28 82259.29 - 97492.36 007
:    6564.68022207   3.9E-08  H I E1 2p-3d 2Po-2D  3/2 - 3/2 1.08E+07    28 82259.29 - 97492.32 007
:    6564.72233922   4.1E-08  H I E1 2p-3s 2Po-2S  3/2 - 1/2 4.21E+06    28 82259.29 - 97492.22 007

+ So, with two decimal places in the wave numbers, we get for the first H\alpha component: 6564.52269355 +/- 4.30929581942e-3
  + This is much less precise than the 4e-8 \AA claimed on the wavelengths, but does this matter?
  + 4e-3 is only 0.2 km/s, which is small
  + For Ly lines the wavelength precision is greater: 1025.72182096 +/- 1.05210525399e-4, which gives 0.03 km/s

O I 
: -LAB-WAVL-ANG-VAC-|-DLAM--|SPC-|TT|---CONFIGURATION----------|-TERM--|J_i-J_k|--A_ki--|-TPF-|--LVL-EN--CM-1---|
:    1025.76161      9.4E-05  O I E1   2s2.2p4-2s2.2p3.(4So).3d  3P-3Do  2 - 3  7.40E+07    15   0.00 - 97488.54 
:    1025.76256      9.4E-05  O I E1   2s2.2p4-2s2.2p3.(4So).3d  3P-3Do  2 - 2  1.84E+07    15   0.00 - 97488.45 
:    1025.76330      9.4E-05  O I E1   2s2.2p4-2s2.2p3.(4So).3d  3P-3Do  2 - 1  2.05E+06    15   0.00 - 97488.38 
:    1027.43051      9.4E-05  O I E1   2s2.2p4-2s2.2p3.(4So).3d  3P-3Do  1 - 2  5.52E+07    15 158.26 - 97488.45 
:    1027.43125      9.4E-05  O I E1   2s2.2p4-2s2.2p3.(4So).3d  3P-3Do  1 - 1  3.06E+07    15 158.26 - 97488.38 
:    1028.15710      9.4E-05  O I E1   2s2.2p4-2s2.2p3.(4So).3d  3P-3Do  0 - 1  4.08E+07    15 226.98 - 97488.38 



*** References for atomic physics
+ O I lines
  + Tayal:2009a theoretical calculations
  + Cashman:2017a and Morton:2003b compilations of data
  + Ivanov:2008a actual measurements of the line wavelengths from UV laser metrology
    + These are the results for our lines of interest
      | Initial \to Final   | Freq, cm^-1 | Wav, nm     |
      |-------------------+------------+-------------|
      | 3P_0 \to (4S) 3d 3D_1 | 97 261.383 | 102.815 729 |
      | 3P_1 \to (4S) 3d 3D_1 | 97 330.100 | 102.743 139 |
      | 3P_1 \to (4S) 3d 3D_2 | 97 330.159 | 102.743 077 |
      | 3P_2 \to (4S) 3d 3D_1 | 97 488.369 | 102.576 339 |
      | 3P_2 \to (4S) 3d 3D_2 | 97 488.429 | 102.576 276 |
      | 3P_2 \to (4S) 3d 3D_3 | 97 488.530 | 102.576 170 |
    + Strangely, the motivation seems to be measuring cosmic evolution of fine structure constant
    + They get accuracies of \pm 8e-6 nm or \pm 0.008 cm^-1 (relative accuracy better than 1 part in 1e7 or 0.03 km/s)
  + The relative splitting of the ground state 3P_0,1,2 is known even more accurately
    + \pm 0.00001 cm^-1
    + From IR spectroscopy, Zink:1991a
    + Transitions at 63.227 and 145.626 microns
+ H I lines
  + 


*** Column densities
:PROPERTIES:
:ID:       B644E1CC-212F-4A30-9924-04DB7BAADF00
:END:
+ Lee:2009a say that Raman optical depth /is what?/
+ Nussbaumer:1989a have cross sections
  + \sigma = 2e-25 at 1000 \AA and at 1050 \AA, so d\lambda_0 = 25 \AA
  + So at d\lambda_0 = 1 \AA, \sigma = 1.25e-22
  + d\lambda_1 = 40.96 d\lambda_0 => \sigma = 1.25e-22 40.96**2 = 2.1e-19 at d\lambda_1 = 1 \AA
  + Clean regions
    - R007 \Delta\lambda_1 = +(6 \to 8) : \lambda_1 = [6568.7, 6571.25]
    - R011 \Delta\lambda_1 = +(9 \to 12) : \lambda_1 = [6572.1, 6574.65]
    - R040 \Delta\lambda_1 = +(31 \to 48) : \lambda_1 = [6594.2, 6611.2]
    - R057 \Delta\lambda_1 = +(49 \to 65) : \lambda_1 = [6612.05, 6628.2]
    - R087 \Delta\lambda_1 = +(76 \to 98) : \lambda_1 = [6638.4, 6660.5]
    - B006 \Delta\lambda_1 = -(5 \to 7) : \lambda_1 = [6555.95, 6557.65]
    - B009 \Delta\lambda_1 = -(8 \to 10) : \lambda_1 = [6552.55, 6555.1]
  + Regions that need lines removing
    - R136 \Delta\lambda_1 = +(126 \to 146) : \lambda_1 = [6688.55, 6708.95]
      - Moderate contamination
    - B033 \Delta\lambda_1 = -(22 \to 44) : \lambda_1 = [6518.55, 6540.65]
      - Light contamination
    - B054 \Delta\lambda_1 = -(45 \to 63) : \lambda_1 = [6499.85, 6517.7]
      - Light contamination
    - B080 \Delta\lambda_1 = -(66 \to 94) : \lambda_1 = [6469.25, 6496.45]
      - Heavy contamination
  + Table of ones used
    | B133 | -132.78 | [6414.85, 6445.45] |
    | B080 |  -80.08 | [6469.25, 6496.45] |
    | B054 |  -54.16 | [6499.85, 6517.70] |
    | B033 |  -33.33 | [6518.55, 6540.65] |
    | R040 |   39.77 | [6594.2, 6611.2]   |
    | R058 |   57.19 | [6612.05, 6628.2]  |
    | R087 |   86.52 | [6638.4, 6660.5]   |
    | R136 |  135.82 | [6688.55, 6708.95] |
    #+TBLFM: $2=vmean($3 - 6562.74 (1 + (25-16.2)/3e5));f2
    + Rest wavelength is 6562.74, which is 6562.39 in topocentric frame, accounting for -16.2 km/s heliocentric correction
    + But we also want a +25 km/s shift to get to rest frame of Trapezium
  + Mapping variations in \sigma onto typical column densities (assume \tau=1)
    + 10 \AA => \sigma = 2.1e-21 cm^2 => N(H_0) = 5e20 /cm^2
      + Can't really say much about A_V here since dust will be in ionized gas too
    + 100 \AA => \sigma = 2.1e-23 cm^2 => N(H_0) = 5e22 /cm^2
      + => A_V = 24 if \sigma_d = 5e-22 cm^2/H but could be less if dust-gas ratio is low
    + But the total H_0 column a PDR will be limited since the H turns molecular eventually
  + /Most recent Raman cross sections/
    + Chang:2015a
    + Define \Delta V_1 as velocity scale around Ly\beta (and \Delta V_2 around Ly\gamma)
    + Total cross section = 1e-22 @ \Delta V_1 = [-1264, +930] km/s
      + Wavs at Ha are 6563 (1 + 6.4 [-1264, +930]/3e5) = [6386, 6693]
        + \Delta\lambda = [-177, +130] \AA
      + More values in Tab 2, but they don't go to higher cross sections (smaller columns)
    + H\alpha branching ratio is 0.2 \to 0.3 in this range
    + 1027.43 \AA (6634 \AA) corresponds to V_1 = +500 km/s, so \sigma = 3.4596e-22 cm^2
  + Dust extinction should be an important limiting factor
    + Source function, S = j/k

***** Measurements from Chang:2015a figure

****** Summary
+ Define x = \Delta\lambda_2/100 \AA
  + Fits are accurate for x = -2 \to +2
+ H\alpha branching ratio is approx:
  + 0.2238 + 0.0363 x + 0.0024 x^2
+ Blue flank \sigma / 1e-21 is approx
  + (0.2186 - 0.0344 x - 0.0054 x^2) x^-2
  + Application to Blue bands
    |      |         |      x |     f | \sigma_-21 |   f \sigma |
    |------+---------+--------+-------+-------+-------|
    | B133 | -132.78 | -1.328 | 0.180 | 0.144 | 0.026 |
    | B080 |  -80.08 | -0.801 | 0.196 | 0.378 | 0.074 |
    | B054 |  -54.16 | -0.542 | 0.205 | 0.802 | 0.164 |
    | B033 |  -33.33 | -0.333 | 0.212 | 2.069 | 0.439 |
    #+TBLFM: $3=$2/100;f3::$4=0.2238 + 0.0363 $3 + 0.0024 $3**2 ;f3::$5=(0.2186 - 0.0344 $3 - 0.0054 $3**2)/$3**2;f3::$6=$4 $5;f3
+ Red flank \sigma / 1e-21 is approx
  + 0.2367 - 0.0187 x + 0.0041 x^2
  + Application to Red bands
    |      |        |     x |     f | \sigma_-21 |   f \sigma |
    |------+--------+-------+-------+-------+-------|
    | R040 |  39.77 | 0.398 | 0.238 | 1.451 | 0.345 |
    | R058 |  57.19 | 0.572 | 0.244 | 0.695 | 0.170 |
    | R087 |  86.52 | 0.865 | 0.255 | 0.299 | 0.076 |
    | R136 | 135.82 | 1.358 | 0.274 | 0.119 | 0.033 |
    #+TBLFM: $3=$2/100;f3::$4=0.2242 + 0.0344 $3 + 0.0019 $3**2 ;f3::$5=(0.2367 - 0.0187 $3 + 0.0041 $3**2)/$3**2;f3::$6=$4 $5;f3
+ These have now been recalculated with ~np.polyfit~
+ Note that f \sigma, which should be proportional to the wing intensity, is well matched between equivalent blue and red bands
+ The \sigma itself, proportional to optical depth, is about 20% higher on the blue side
+ For larger \Delta\lambda_2, the red side bias becomes more prominent
  + Seen at larger colummns

****** Branching ratio
+ x-axis : 0.62 in = 1000 km/s (zero-point: x = 10 in)
  |     in | \Delta V_1 | in/1000 km/s |
  |--------+-------+--------------|
  |  7.528 | -4000 |        -0.62 |
  |     10 |     0 |            0 |
  | 12.479 |  4000 |         0.62 |
  #+TBLFM: $3=($1-10)/4;f2
+ y axis : 2.33 in per unit (zero-point: y = 4.503 )
  |    in |   f |           |
  |-------+-----+-----------|
  | 4.503 | 0.0 |   0. / 0. |
  | 3.802 | 0.3 | 2.3366667 |
  | 3.101 | 0.6 | 2.3366667 |
  #+TBLFM: $3=(4.503 - $1)/$2
+ Measurements
  #+name: branch-ratio
  |  x, in | y, in |  \Delta V_1 |   \Delta\lambda_2 |      f | Model f |     Err | % Rel Err |
  |--------+-------+--------+--------+--------+---------+---------+-----------|
  |  7.528 | 4.291 | -3987. | -558.2 | 0.0907 |  0.0960 | -0.0053 |      -5.5 |
  |  8.007 | 4.247 | -3215. | -450.1 | 0.1096 |  0.1090 |  0.0006 |       0.6 |
  |  8.551 | 4.191 | -2337. | -327.2 | 0.1335 |  0.1307 |  0.0028 |       2.1 |
  |  9.018 | 4.133 | -1584. | -221.8 | 0.1583 |  0.1551 |  0.0032 |       2.1 |
  |  9.510 | 4.065 |  -790. | -110.6 | 0.1874 |  0.1866 |  0.0008 |       0.4 |
  | 10.001 | 3.979 |     2. |    0.3 | 0.2243 |  0.2239 |  0.0004 |       0.2 |
  | 10.570 | 3.872 |   919. |  128.7 | 0.2700 |  0.2745 | -0.0045 |      -1.6 |
  | 11.001 | 3.770 |  1615. |  226.1 | 0.3137 |  0.3181 | -0.0044 |      -1.4 |
  | 11.622 | 3.595 |  2616. |  366.3 | 0.3886 |  0.3890 | -0.0004 |      -0.1 |
  | 12.021 | 3.469 |  3260. |  456.4 | 0.4425 |  0.4395 |  0.0030 |       0.7 |
  #+TBLFM: $3=1000 ($1 - 10.0) / 0.62;f0::$4=6562.74 6.4 $3 / 3e5 ;f1::$5=(4.503 - $2)/2.3366667;f4::$6=0.2238 + 0.0363 ($4/100) + 0.0024 ($4/100)**2 ;f4::$7=$-2 - $-1;f4::$8=100 $-1/$-2;f1
****** Total cross section
+ y axis: log_10 \sigma = -20 - (y/in)
  
+ Blue flank Measurements
  #+name: blue-flank
  | x, in | y, in |  \Delta V_1 |   \Delta\lambda_2 |         \sigma | 1e22 \sigma (\Delta\lambda_2/100)^2 | Model |  error | % Rel Err |
  |-------+-------+--------+--------+-----------+---------------------+-------+--------+-----------|
  | 8.996 | 2.280 | -1619. | -226.7 | 5.248e-23 |               2.697 | 2.688 | -0.009 |     -0.33 |
  | 9.052 | 2.234 | -1529. | -214.1 | 5.834e-23 |               2.674 | 2.675 |  0.001 |      0.04 |
  | 9.098 | 2.193 | -1455. | -203.7 | 6.412e-23 |               2.661 | 2.663 |  0.002 |      0.08 |
  | 9.139 | 2.154 | -1389. | -194.5 | 7.015e-23 |               2.654 | 2.651 | -0.003 |     -0.11 |
  | 9.205 | 2.091 | -1282. | -179.5 | 8.110e-23 |               2.613 | 2.629 |  0.016 |      0.61 |
  | 9.340 | 1.935 | -1065. | -149.1 | 1.161e-22 |               2.581 | 2.579 | -0.002 |     -0.08 |
  | 9.392 | 1.869 |  -981. | -137.3 | 1.352e-22 |               2.549 | 2.557 |  0.008 |      0.31 |
  | 9.430 | 1.813 |  -919. | -128.7 | 1.538e-22 |               2.547 | 2.539 | -0.008 |     -0.32 |
  | 9.480 | 1.740 |  -839. | -117.5 | 1.820e-22 |               2.513 | 2.516 |  0.003 |      0.12 |
  | 9.525 | 1.667 |  -766. | -107.2 | 2.153e-22 |               2.474 | 2.493 |  0.019 |      0.76 |
  | 9.565 | 1.589 |  -702. |  -98.3 | 2.576e-22 |               2.489 | 2.472 | -0.017 |     -0.69 |
  | 9.607 | 1.509 |  -634. |  -88.8 | 3.097e-22 |               2.442 | 2.449 |  0.007 |      0.29 |
  | 9.640 | 1.429 |  -581. |  -81.3 | 3.724e-22 |               2.461 | 2.430 | -0.031 |     -1.28 |
  | 9.684 | 1.326 |  -510. |  -71.4 | 4.721e-22 |               2.407 | 2.404 | -0.003 |     -0.12 |
  | 9.716 | 1.239 |  -458. |  -64.1 | 5.768e-22 |               2.370 | 2.384 |  0.014 |      0.59 |
  | 9.747 | 1.134 |  -408. |  -57.1 | 7.345e-22 |               2.395 | 2.365 | -0.030 |     -1.27 |
  | 9.767 | 1.075 |  -376. |  -52.6 | 8.414e-22 |               2.328 | 2.352 |  0.024 |      1.02 |
  | 9.782 | 1.015 |  -352. |  -49.3 | 9.661e-22 |               2.348 | 2.342 | -0.006 |     -0.26 |
  | 9.787 | 1.000 |  -344. |  -48.2 |     1e-21 |               2.323 | 2.339 |  0.016 |      0.68 |
  #+TBLFM: $3=1000 ($1 - 10.0) / 0.62;f0::$4=6562.74 6.4 $3 / 3e5 ;f1::$5=10**(-20 - $2);s4::$6=1e22 ($4/100)**2 $5 ;f3::$7=2.186 - 0.344 ($4/100) - 0.054 ($4/100)**2 ;f3::$8=$-1 - $-2;f3::$9=100 $-1/$-2;f2
+ Red flank measurements
  #+name: red-flank
  |  x, in | y, in | \Delta V_1 |  \Delta\lambda_2 |         \sigma | Norm \sigma | Model |  Error |       |
  |--------+-------+-------+-------+-----------+--------+-------+--------+-------|
  | 10.212 | 1.000 |  342. |  47.9 |     1e-21 |  2.294 | 2.278 | -0.016 | -0.70 |
  | 10.229 | 1.071 |  369. |  51.7 | 8.492e-22 |  2.270 | 2.271 |  0.001 |  0.04 |
  | 10.250 | 1.151 |  403. |  56.4 | 7.063e-22 |  2.247 | 2.263 |  0.016 |  0.71 |
  | 10.274 | 1.234 |  442. |  61.9 | 5.834e-22 |  2.235 | 2.253 |  0.018 |  0.80 |
  | 10.304 | 1.321 |  490. |  68.6 | 4.775e-22 |  2.247 | 2.241 | -0.006 | -0.27 |
  | 10.331 | 1.399 |  534. |  74.8 | 3.990e-22 |  2.232 | 2.229 | -0.003 | -0.13 |
  | 10.363 | 1.480 |  585. |  81.9 | 3.311e-22 |  2.221 | 2.217 | -0.004 | -0.18 |
  | 10.397 | 1.560 |  640. |  89.6 | 2.754e-22 |  2.211 | 2.203 | -0.008 | -0.36 |
  | 10.433 | 1.640 |  698. |  97.7 | 2.291e-22 |  2.187 | 2.188 |  0.001 |  0.05 |
  | 10.472 | 1.718 |  761. | 106.5 | 1.914e-22 |  2.171 | 2.172 |  0.001 |  0.05 |
  | 10.514 | 1.794 |  829. | 116.1 | 1.607e-22 |  2.166 | 2.155 | -0.011 | -0.51 |
  | 10.541 | 1.844 |  873. | 122.2 | 1.432e-22 |  2.138 | 2.144 |  0.006 |  0.28 |
  | 10.570 | 1.889 |  919. | 128.7 | 1.291e-22 |  2.138 | 2.133 | -0.005 | -0.23 |
  | 10.686 | 2.061 | 1106. | 154.8 | 8.690e-23 |  2.082 | 2.087 |  0.005 |  0.24 |
  | 10.732 | 2.122 | 1181. | 165.3 | 7.551e-23 |  2.063 | 2.069 |  0.006 |  0.29 |
  | 10.791 | 2.193 | 1276. | 178.6 | 6.412e-23 |  2.045 | 2.046 |  0.001 |  0.05 |
  | 10.847 | 2.256 | 1366. | 191.2 | 5.546e-23 |  2.027 | 2.024 | -0.003 | -0.15 |
  | 10.905 | 2.319 | 1460. | 204.4 | 4.797e-23 |  2.004 | 2.001 | -0.003 | -0.15 |
  | 10.998 | 2.412 | 1610. | 225.4 | 3.873e-23 |  1.968 | 1.966 | -0.002 | -0.10 |
  #+TBLFM: $3=1000 ($1 - 10.0) / 0.62;f0::$4=6562.74 6.4 $3 / 3e5 ;f1::$5=10**(-20 - $2);s4::$6=1e22 ($4/100)**2 $5 ;f3::$7=2.367 - 0.187 ($4/100) + 0.004 ($4/100)**2 ;f3::$8=$-1 - $-2;f3::$9=100 $-1/$-2;f2
****** Fitting polynomials to \sigma and branching ratio
#+name: fit-poly
#+header: :var INTAB=blue-flank XCOL=3 YCOL=5
#+begin_src python :return rslt :results verbatim
  import numpy as np
  arr = np.array(INTAB)
  x = arr[:, XCOL].astype(float)/100.0
  y = arr[:, YCOL].astype(float)

  rslt = list(zip(x, y))

  rslt = np.poly1d(np.polyfit(x, y, deg=2))
#+end_src

#+RESULTS: fit-poly
:           2
: -0.05381 x - 0.3435 x + 2.186

#+call: fit-poly(INTAB=red-flank)

#+RESULTS:
:           2
: 0.004068 x - 0.1866 x + 2.367

#+call: fit-poly(INTAB=branch-ratio, YCOL=4)

#+RESULTS:
:           2
: 0.002363 x + 0.03631 x + 0.2238

**** Transition from optically thick to thin
*** Absorption profile of Ly\beta
+ \lambda_0 = 1025.7222 \AA \pm 0.0005 according to Atomic Line List
  + Rest frequency = c/\lambda_0 = 2.92274514484e15 Hz
  + Fine structure has 2 components, both 3p \to 1s
    + 1025.721824823 2P3/2 \to 2S1/2
    + 1025.722965425 2P1/2 \to 2S1/2
    + Difference = 1.140602e-3 \AA = 0.33 km/s, so negligible
+ Natural width \Gamma
  + A_3\to1 = 5.58E+07 Hz
    + Each component 3p \to 1s has A = 1.67E+08
    + But total multiplicity (of 3s, 3p, 3d) is 2 n^2 = 18
    + Multiplicity of 3p is \sum (2 J + 1) = 4 + 2 = 6
    + So effective A is 1.67e8 (6/18) = 5.55e7, close enough
      + Assumes LTE distribution over the \ell levels
      + And the 3s, 3d levels have A = 0 since they cannot decay to 1s
  + But also need to include H\alpha with A = 4.41E+07 Hz
  + So \Gamma = 1e8 Hz almost exactly
  + So c \Gamma/\nu_0 = \lambda_0 \Gamma = 0.01 km/s, so also negligible even when converted to H\alpha domain
  + Width at H\alpha is 0.64 km/s = 0.014 \AA
  + If Doppler width is 10 km/s,
    + then a = \Gamma / 4\pi \Delta\nu_D 
    + where \Delta\nu_D = v \nu_0/c = 9.75e10 Hz
    + a = 8e-5
*** Fine structure of H\alpha
+ I have been using 6562.79 for wavelength, but should only use the 3p \to 2s components
  + (6562.72481820 4 + 6562.77152383 2) / (4 + 2) = 6562.74038675
  + 2.27 km/s to the blue of where I thought
  + So this will make things worse with the O I line
+ But on other hand, velocity multiplier is now 6562.74038675/1025.7222 = 6.39816549427
  + Which is slightly less
+ Or wav multiplier of 40.9365216921
**** H\alpha multiplet results from Atomic Line List
|     wav (air) |    dwav | lower      | upper      |      A_ki |
|---------------+---------+------------+------------+----------|
| 6562.70969315 | 3.9E-08 | 2p 2Po 1/2 | 3d 2D  3/2 | 5.39E+07 |
| 6562.72481820 | 5.7E-08 | 2s 2S  1/2 | 3p 2Po 3/2 | 2.24E+07 |
| 6562.75179697 | 4.1E-08 | 2p 2Po 1/2 | 3s 2S  1/2 | 2.10E+06 |
| 6562.77152383 | 5.7E-08 | 2s 2S  1/2 | 3p 2Po 1/2 | 2.24E+07 |
| 6562.85175775 | 3.9E-08 | 2p 2Po 3/2 | 3d 2D  5/2 | 6.47E+07 |
| 6562.86732645 | 3.9E-08 | 2p 2Po 3/2 | 3d 2D  3/2 | 1.08E+07 |
| 6562.90943229 | 4.1E-08 | 2p 2Po 3/2 | 3s 2S  1/2 | 4.21E+06 |
|---------------+---------+------------+------------+----------|

g_k*A_ki weighted average wavelength:    6562.79521921  

*** Red-blue asymmetry in wings
+ Variation of Balmer conversion ratio
*** Excitation from continuum versus lines
+ O VI 1032,38 \to 6827,7088 in symbiotic stars
+ 
** Symbiotic stars
+ Lots of work
  + Schmid:1989a
    + O VI lines Raman scatter off Ly\beta to give 6830, 7088 \AA bands
    + This is much further from resonance, so requires much larger column densities than for the H\alpha wings
    + E.g, 6830 - 6563 = 267 \AA
    + Whereas, our wings go out to 6700 - 6563 = 137 \AA
    + So they have 4 times lower cross section for that
    + Also, they have flux ratio 6830/6563 of about 0.05
    + We have 3e4/1.5e9 = 2e-5
      + 3e4 is measured around 6700 \AA, d\lambda = 137 \AA
      + 2.2e5 at 6600 \AA gives Raman/Core of 1.5e-4 for d\lambda = 37 \AA
      + So we would expect 14 times higher, whereas we observe 2.2e5/3e4 = 7.3 /probably the 6700 region is contaminated with weak lines/
    + So, our prediction for 6830/6563 would be 1.5e-4 (37/267)**2 = 2.9e-6
      + This is 6e-5 times what is observed in symbiotic stars
      + So, if this were all down to column density, we would require a *1e4 times smaller column*
      + Although there will also be a dependence on F(Ly\beta) / F(H\alpha), where Ly\beta is measured in the neutral slab
** AGN
+ Nussbaumer:1989a
+ Chang:2015a
  + [CHD+15] Seok-Jun Chang, Jeong-Eun Heo, Francesco Di Mille, Rodolfo Angeloni, Tali Palma, and Hee- Won Lee. Formation of Raman Scattering Wings around H alpha, H beta, and Pa alpha in Active Galactic Nuclei. ApJ, 814(2):98, Dec 2015.
  + Theory but no observations
+ Chang:2017a
  + [CLY17] Seok-Jun Chang, Hee-Won Lee, and Yujin Yang. Polarization of Rayleigh scattered Lyα in active galactic nuclei. MNRAS, 464(4):5018–5027, Feb 2017.
  + This is /Rayleigh/ scattering rather than /Raman/ but presumably would be similar for Raman


** H II regions
Most of these I found from the intro of the Dopita:2016a paper
*** NGC 2363
+ Giant H II region
+ Roy:1992a
  + [RAMD92] Jean-Rene Roy, Martin Aube, Marshall L. McCall, and R. J. Dufour. The Origin of Broad Emission Lines in the Extragalactic Giant H II Region NGC 2363. ApJ, 386:498, Feb 1992.
  + They see wings up to 40 \AA or 2400 km/s, but in H\alpha *and [O III]*
  + This would tend to rule our Raman in this case
+ Binette:2009b
  + [BDU+09] L. Binette, L. Drissen, L. Ubeda, A. C. Raga, C. Robert, and Y. Krongold. The broad Hα, [O III] line wings in stellar supercluster A of NGC 2363 and the turbulent mixing layer hypothesis. A&A, 500(2):817–826, Jun 2009.
  + Ascribe to mixing layer

*** NGC 5471
+ Giant H II region
+ Castaneda:1990a
  + [CVC90] Hector O. Castaneda, J. M. Vilchez, and Marcus V. F. Copetti. A Remarkable Feature in the Giant Extragalactic H II Region NGC 5471. ApJ, 365:164, Dec 1990.
  + Not as broad as in Orion
  + Ascribed to SNR


** PNe

*** Ring Nebula
+ I had high hopes, but I found nothing
+ [[file:~/Dropbox/dib-scatter-hii/data/ring-nebula/]]
* Column densities of O I lines
** Relation between Einstein-A and cross section
+ \sigma_ik = (h\nu/4\pi) B_ik
+ g_k A_ki = (2h\nu^3/c^2) g_k B_ki = (2h\nu^3/c^2) g_i B_ik
+ => \sigma_ik = (h\nu/4\pi) g_k A_ki / [(2h\nu^3/c^2) g_i ] = (g_k/g_i) (c^2 / 8 \pi \nu^2) A_ki 
+ => \sigma_ik = (g_k/g_i) (\lambda^2 / 8 \pi) A_ki 
+ Why are units of \sigma in cm^2 Hz ?
  + Because the line-center cross-section does depend on the line width
  + \sigma(\nu_0) = \sigma_jk \phi(\nu_0) cm^2
  + Where \phi(\nu) is the absorption profile
  + And \phi(\nu_0) ~ 1/\Delta\nu and \Delta\nu = \nu_0 \Delta{}V/c = \Delta{}V / \lambda_0
  + => \phi(\nu_0) \approx \lambda_0 / \Delta{}V
+ So, taking the Hilborn version from below, we get
  + \sigma(\nu_0) = 1/4 (g_2/g_1) (\lambda_0^3 / \Delta{}V) A_ki 
*** Hilborn:2002a
+ Does things carefully but uses funny units (and atrocious typesetting)
+ \sigma_0 = 1/4 (g_2/g_1) \lambda_21^2 A_21
  + This is like the \sigma_jk above
  + It is larger by a factor of 2\pi - why?
** Application to our FUV lines

|        Wav | J_i | J_k |      A_ki |        \sigma |
|------------+----+----+----------+----------|
| 1025.76161 |  2 |  3 | 7.40E+07 | 2.80e-14 |
| 1025.76256 |  2 |  2 | 1.84E+07 | 4.96e-15 |
| 1025.76330 |  2 |  1 | 2.05E+06 | 3.32e-16 |
| 1027.43051 |  1 |  2 | 5.52E+07 | 2.49e-14 |
| 1027.43125 |  1 |  1 | 3.06E+07 | 8.30e-15 |
| 1028.15710 |  0 |  1 | 4.08E+07 | 3.33e-14 |
#+TBLFM: $5=0.25 $4 ((2 $3 + 1) / (2 $2 + 1) ) ($1 $ang)**3 / 10 $km ;s3

+ So they are all about 3e-14 cm^2
+ O abundance in gas phase is 8.5 to 8.65 depending whether using ORL or CEL
  + 10**(8.5 - 12) = 3.16e-4
  + 10**(8.65 - 12) = 4.46e-4
+ Take 4e-4 as an average
+ This means that \sigma per H atom is about 1.332e-17 cm^2/H^0, which is about the same as the H^0 photoionization cross section.
** DONE Summary of fluorescent O I spectrum
CLOSED: [2019-08-27 Tue 12:53]
*** Main route through 3p \to 3s 8446 \AA
1. All fluoresced excited levels considered are 2s2.2p3.(4So).nl 
2. The nd 3D^o and ns 3S^o terms are pumped by resonant transitions from the ground 2s2.2p4 3P term
   - Strict LS coupling E1 selection rules are \Delta S = 0, \Delta L = 0, \pm 1, \pi_f = -\pi_i
     - So the np 3P terms are not pumped (same parity as ground)
     - And the 5S, 5D terms require intermediate coupling (intercombination lines), which are weak
   - Lowest pumped terms are 3s 3S^o via 1304 \AA (UV 2) and 4s 3S^o via 1041 \AA (UV 3)
   - Then 3d 3D^o via 1026 \AA (our Raman line)
   - Then 5s, 4d, 6s, 5d, 7s, 6d, etc
   - Highest with observable consequence are 11s and 10d via 920 \AA (UV 21 and 22)
     - [ ] Comparing A-values: 
3. These then de-excite via a cascade of [nd 3D^o, ns 3S^o] \leftrightarrow n'p 3P transitions
   - Most emit IR lines
   - Most important transitions end in 3p 3P (86626 cm^-1 above ground, or 23211 cm^-1 = 4308 \AA below continuum)
   - Tne nd \to 3p and ns \to 3p transitions give the optical lines 7254, 7002, 6046, ... 4972
     - There are also the 3d \to 3p 1.128 micron and 4s \to 3p 1.316 micron lines, which accounting suggests represent > 50% of the total feeding of 3p
   - The only way out from 3p 3P is 8446 \AA \to 3s 3S^o followed by 1304 \AA \to ground 3P
*** Minor routes
1) There is a leakage of the cascade via {4,5,6,...}p \to 3s. For example 4p \to 3s which gives the 4368 line, but this is 20 times weaker (in photons) than 3p \to 3s
2) We see quintet lines too but 100 times weaker.  Must be populated  by intercombination lines. Two possiblities
   - Direct pumping from ground to quintet states
     - Unlikely to be important since A < 1000 s^-1 for these lines
     - Also, the UV 3.01 multiplet is not seen in the Raman-scattered spectrum
     - [ ] Should work out exact optical wavelengths
   - Decay from excited triplets to excited quintets
     - Maybe LS coupling breaks down more for the higher levels
3) We even see a line from a two-electron transition
   - 3p 3P - 3s' 3D 7982.40, 7987.33 multiplet 19
   - But very weak, about 26 times weaker than 7254 (Esteban:2004a)
   - A is of order 1e4, as opposed to 3e7 for the 8446 triplet line and 3e6 for the 7254 line
     - Ratio of A values: 300, so it must be more efficiently pumped than 5s 3S
** TODO Do the accounting for the cascades
+ Add up all ns \to 3p and nd \to 3p
  + (converted to photon units)
  + Use Esteban values
+ Compare with the 3p \to 3s 8446 to see how important the unobserved 3d \to 3p and 4s \to 3p are.
+ See table below
  + Column 3 ~n~ is the dereddened line intensity in /photon/ units on a scale of H\beta = 100
  + The sum for the {ns, nd} \to 3p lines is 0.597, or 40% of the 8446 3p \to 3s line
  + This implies that 60% of the pumping of 3p comes via 3d and 4s (or
    levels higher than 10d, 11s)

|  wav |     I |     n | upper |
|------+-------+-------+-------|
| 8446 | 0.882 | 1.525 |       |
|------+-------+-------+-------|
| 4980 | 0.012 | 0.012 | 11s   |
| 5147 | 0.040 | 0.042 | 9s    |
| 5275 | 0.011 | 0.012 | 7d    |
| 5299 | 0.031 | 0.034 | 8s    |
| 5513 | 0.024 | 0.027 | 6d    |
| 5555 | 0.030 | 0.034 | 7s    |
| 5958 | 0.038 | 0.046 | 5d    |
| 6046 | 0.089 | 0.110 | 6s    |
| 7002 | 0.086 | 0.123 | 4d    |
| 7254 | 0.106 | 0.157 | 5s    |
|------+-------+-------+-------|
|  Sum |       | 0.597 |       |
#+TBLFM: $3=$1 $2 / 4886;f3::@13$3=vsum(@II..@III);f3
** What about the observed O I lines?
+ Strongest is 8446.36, 8444.25, 8444.7

Data from Atomic Line List
: -LAB-WAVL-ANG-AIR-|-DLAM--|SPC-|TT|----------CONFIGURATION----------|-TERM--|J_i-J_k|--A_ki--|-TPF-|LEVEL-ENERGY--CM^-1|-REF---|
:    8446.247        6.4E-03  O I E1 2s2.2p3.(4So).3s-2s2.2p3.(4So).3p 3So-3P   1 - 0  3.18E+07    15 76794.98 - 88631.30 ASD
:    8446.359        6.4E-03  O I E1 2s2.2p3.(4So).3s-2s2.2p3.(4So).3p 3So-3P   1 - 2  3.18E+07    15 76794.98 - 88631.15 ASD
:    8446.758        6.4E-03  O I E1 2s2.2p3.(4So).3s-2s2.2p3.(4So).3p 3So-3P   1 - 1  3.18E+07    15 76794.98 - 88630.59 ASD

So upper level is ~2s2.2p3.(4So).3p 3So-3P~ term as opposed to the ~3D~ term that our FUV lines excite. 
*** Cascade from ~3d 3D~ term
+ There are some weak semi-forbidden intercombination transitions: 
  + \to 2s2.2p4 1D and 1S in the ground configuration with A values around 1000 /s
    + Excitation of 15867.86 and 33792.58 cm^-1 above ground, so 6300 and 2960 and 5577 forbidden lines will be pumped (presumably negligibly compared with collisions) 
  + \to 3p 5P excited term, all with A < 1000 /s as well
+ Apart from that, the only transitions are to 3p 3P and back to the ground 3P
  1. \to 3p 3P - \lambda = 1.129 \micro{}m - A = 2.8e7 from J=2, 2.8e7 from J=3, 2.8e7 from J=1
  2. \to ground 3P - \lambda = 1026-1028 \AA - A = 7.4e7 from J=3,2, or 1
+ So branching ratios are 27.5% and 72.5%
+ So after 4 absorptions of 1025, most has been converted to longer wavelengths
+ Only 0.003% go the intercombination route
+ After that, the only route is 8448 \AA \to 3s 3S followed by 1305 \AA back to the ground
+ So that makes a nice cycle
*** Other O I fluorescent lines
:PROPERTIES:
:ID:       6D6ABAF2-EFB7-4809-BE42-AB3B6AB5AAFD
:END:
+ 7982.40, 7987.33
  + Multiplet 19
  + 3p 3P - 3s' 3D
  + This has the inner shells in a different term: (2D^o) instead of (4S^o)
  + Very weak
  + [ ] How is 3s' 3D excited?
+ 7771.94,74.17,75.39
  + Multiplet 1
  + 3s 5S - 3p 5P
  + Sky contam, but real I think
  + Only evidence of intercombination pumping - this is the equivalent of 8446 but for the quintets (100 times weaker)
  + Should be pumped indirectly via
    + Ground 3P \to 3d 5D^o (1026.476, 1028.145, 1028.870)
    + Then, 3d 5D^o \to 3p 5P (multiplet 8, 9260 to 9266 \AA)
      + *I seem to see this in MUSE spectra* although there may be some sky and also [Fe II] 9268
+ 7254.15,54.45,54.53
  + Multiplet 20
  + 3p 3P - 5s 3S
  + Strong, but still much weaker than 8446
+ 7001.92,2.23
  + Multiplet 21
  + 3p 3P - 4d 3D
  + A bit weaker than 7254
+ 6046.23,.44,.49
  + Multiplet 22
  + 3p 3P - 6s 3S
  + Weaker still
+ 5958
  + Multiplet 23
  + 3p 3P - 5d 3D
  + Blend with Si II
+ 5555.03
  + Multiplet 24
  + 3p 3P - 7s 3S
  + Even weaker
+ 5512.60,.77
  + Multiplet 25
  + 3p 3P - 6d 3D
+ 5299
  + Multiplet 26
  + 3p 3P - 8s 3S
+ 5275
  + Multiplet 27
  + 3p 3P - 7d 3D
  + Blended with [Fe III] 5270
+ 5147
  + Multiplet 28
  + 3p 3P - 9s 3S
+ 5131
  + Multiplet 29
  + 3p 3P - 8d 3D
+ 5038 and 5048
  + Heavy blends with He I, [Fe II], Si II
+ 4980
  + Multiplet ??
  + 3p 3P - 11s 3S
  + 
+ 4972
  + 3p 3P - 10d 3D
  + Marginally detected in wing of [O III] 4959
+ Limit is 4715 for the shortest lines ending in 3p 3P
  + The ns \to 3p transitions tend to have 3x higher A values than the (n-1)d \to 3p transitions that are near them in wavelength, which explains why they are brighter 
  + There is a possible detection of 4895 3p \to 13s in MUSE, but most of the higher lines are blends with other lines
  + 4867 and 4864 are in red wing of H\beta
  + 4842, 4845 (14d, 15s !!!) are in blue wing of H\beta and might even be detected in Orion S
  + 4825, 4827 are the next ones - in a clean bit of spectrum but not visible
*** Lines that aren't observed but might be useful
+ 4p (99680 - 99682) can decay to
  + 3s 4368 \AA
    + *but it is observed*
    + Esteban:2004a give I = 0.073 on H\beta = 100 scale
      + And Baldwin:2000a give I = 0.0147 on I/6678 scale, where Hb = 24.6 => 100 0.0147 / 24.6 = 0.06, so close enough
    + Whereas Esteban give - 4980: 0.012, 5147: 0.040, 5275: 0.011,  5299: 0.031, 5513: 0.024, 5555: 0.030, 5958: 0.038, 6046: 0.089, 7002: 0.086, 7254: 0.106, 8446: 0.882
      + And Baldwin (just the bright ones, and multiplying by 4 to put on same scale) - 7254: 0.094, 7002: 0.074, 6046: 0.074, 5958: 0.030, 5555: 0.024, 5513: 0.018,  5299: 0.025, 5275: 0.009, 5147: 0.028 (blend with Co I), 5131: 0.007 
    + Other (Mult #) - 6156 (10): 0.005, 6257 (50.01, 3p' \to 4d' MORE LIKELY C II line): 0.016, 7772 (1): 0.016 (sky contam), 7775 (1): 0.006, 7983 (19): 0.002, 7988 (19): 0.004
    + Bluer - 3511.10 (6p-7d? seems unlikely): 0.025, 4326.4 (also unlikely): 0.031, 4344.35 (intercomb? but very unlikely): 0.006
  + 4s 2.89 micron
  + 3d 4.56 micron
+ 4p can be decayed to from
  + 4d 30.983 micron
  + 5s 36.6 micron
  + Up to 10d and 11s at 11 micron
+ 4s (96225.05) can decay to
  + Ground 1041 \AA, A = 1.5e8
  + 3p 1.316 micron, A = 1.9e7
+ 4s can be decayed to from
  + 4p 28.9 micron
  + 5p 13.1 micron
  + 6p 10.3 micron
*** References for energy levels and IR lines
**** Civis:2018a has lines from 7700 \AA to 12.5 micron
Gives best estimate of energy levels.

**** Moore:1973a is a nice compendium
:PROPERTIES:
:ID:       AC2BBA8F-4C85-408E-B6B0-F08DFAFB3718
:END:
+ Multiplet Nos
  + UV 4 :: 2p4 3P \to 3d 3D
    + 1025-1028 \AA
    + Raman-scattered absorption
  + UV 2 ::  2p4 3P \to 3s 3S
    + 1302-1306 \AA
    + Final step back to ground after emission of 8448
  + UV 3.01 :: 2p4 3P \to 3d 5D
    + 1026-1029 \AA
    + Overlaps with UV 4 but presumably much weaker
    + Yes, A = 300 to 400 s^{-1} according to Peter
      + This is 1e5 times weaker than UV 4, which means that \sigma = 1e-22 cm^2/H instead of 1e-17, so A_V = 10
      + So would be optically thin in the PDR
  + UV 21 :: 2p4 3P \to 11s 3S
    + 2s2.2p4-2s2.2p3.(4So).11s 3P-3So
    + 920-922 \AA
      | 919.917 | 2 - 1 | 2.30E+06 | 3 | 0.00 - 108705.50   |
      | 921.258 | 1 - 1 | 1.37E+06 | 3 | 158.26 - 108705.50 |
      | 921.841 | 0 - 1 | 4.57E+05 | 3 | 226.98 - 108705.50 |
    + Note A values are about 30 times smaller than for 2p4 3P \to 3d 3D and 100 times smaller than for 2p4 3P \to 3s 3S
    + Upper 11s term is 108705.50 cm^-1
    + This is the shortest line that excites a term where we definitely see the fluorescence to 3p
  + UV 29 :: 2p4 3P \to 15s 3S
    + 915.2 \AA
    + No A values in Peter's database
    + Upper 15s term is 109265.90 cm^-1
    + This is the shortest line that excites a term where we might /possibly/ see the fluorescence to 3p (4845 \AA)
  + 4 :: 3s 3S \to 3p 3P
    + 8446 \AA air
    + Our strongest fluorescent line
  + 18.02 :: 3p 3P \to 3d 3D
    + 1.1287 micron air
    + Feeds upper level of 8446 after absorption of 1025
  + 18.01 :: 3p 3P \to 4s 3S
    + 1.316 micron air
    + Also feeds upper level of 8446 after absorption of 1041
  + Other multiplets :: 3p 3P \to ns 3S and nd 3D
    + Optical lines from 4972 to 7254 \AA
    + See [[id:6D6ABAF2-EFB7-4809-BE42-AB3B6AB5AAFD][Other O I fluorescent lines]] above
    + These are fed by resonant lines from the ground 3P term

      
*** Original data on downward transitions from 3d, 3p, 3s
Note that ionization energy from ground is 109837.02 cm^{-1}

**** From 2s2.2p3.(4So).3d 3D
Ionization limit: 12348.64 cm^-1 = 8098 \AA vac
|    WAV VAC | SPC  | CONFIGURATION    | TERM   | J_i-J_k |      A_ki | LEVEL ENERGY  CM^-1  |
|------------+------+------------------+--------+-------+----------+---------------------|
| 1025.76161 | O I  | 2s2.2p4          | 3P-3Do | 2 - 3 | 7.40E+07 | 0.00 - 97488.54     |
| 1025.76256 | O I  | 2s2.2p4          | 3P-3Do | 2 - 2 | 1.84E+07 | 0.00 - 97488.45     |
| 1025.76330 | O I  | 2s2.2p4          | 3P-3Do | 2 - 1 | 2.05E+06 | 0.00 - 97488.38     |
| 1027.43051 | O I  | 2s2.2p4          | 3P-3Do | 1 - 2 | 5.52E+07 | 158.26 - 97488.45   |
| 1027.43125 | O I  | 2s2.2p4          | 3P-3Do | 1 - 1 | 3.06E+07 | 158.26 - 97488.38   |
| 1028.15710 | O I  | 2s2.2p4          | 3P-3Do | 0 - 1 | 4.08E+07 | 226.98 - 97488.38   |
| 1225.17976 | O I] | 2s2.2p4          | 1D-3Do | 2 - 3 | 1.64E+03 | 15867.86 - 97488.54 |
| 1225.18111 | O I] | 2s2.2p4          | 1D-3Do | 2 - 2 | 4.10E+02 | 15867.86 - 97488.45 |
| 1225.18216 | O I] | 2s2.2p4          | 1D-3Do | 2 - 1 | 4.55E+01 | 15867.86 - 97488.38 |
| 1569.96235 | O I] | 2s2.2p4          | 1S-3Do | 0 - 1 | 3.80E+02 | 33792.58 - 97488.38 |
|   9205.822 | O I] | 2s2.2p3.(4So).3p | 5P-3Do | 1 - 2 | 1.33E+01 | 86625.76 - 97488.45 |
|   9205.881 | O I] | 2s2.2p3.(4So).3p | 5P-3Do | 1 - 1 | 1.02E+02 | 86625.76 - 97488.38 |
|   9207.459 | O I] | 2s2.2p3.(4So).3p | 5P-3Do | 2 - 3 | 9.48E+02 | 86627.78 - 97488.54 |
|   9207.535 | O I] | 2s2.2p3.(4So).3p | 5P-3Do | 2 - 2 | 1.26E+01 | 86627.78 - 97488.45 |
|   9207.594 | O I] | 2s2.2p3.(4So).3p | 5P-3Do | 2 - 1 | 7.39E+01 | 86627.78 - 97488.38 |
|   9210.576 | O I] | 2s2.2p3.(4So).3p | 5P-3Do | 3 - 3 | 2.78E-01 | 86631.45 - 97488.54 |
|   9210.653 | O I] | 2s2.2p3.(4So).3p | 5P-3Do | 3 - 2 | 3.95E+01 | 86631.45 - 97488.45 |
|  11289.407 | O I  | 2s2.2p3.(4So).3p | 3P-3Do | 1 - 2 | 2.12E+07 | 88630.59 - 97488.45 |
|  11289.496 | O I  | 2s2.2p3.(4So).3p | 3P-3Do | 1 - 1 | 1.18E+07 | 88630.59 - 97488.38 |
|  11290.005 | O I  | 2s2.2p3.(4So).3p | 3P-3Do | 2 - 3 | 2.82E+07 | 88631.15 - 97488.54 |
|  11290.120 | O I  | 2s2.2p3.(4So).3p | 3P-3Do | 2 - 2 | 7.05E+06 | 88631.15 - 97488.45 |
|  11290.209 | O I  | 2s2.2p3.(4So).3p | 3P-3Do | 2 - 1 | 7.83E+05 | 88631.15 - 97488.38 |
|  11290.409 | O I  | 2s2.2p3.(4So).3p | 3P-3Do | 0 - 1 | 1.57E+07 | 88631.30 - 97488.38 |


**** From 2s2.2p3.(4So).3p 3P
Ionization limit: 21206.43 cm^-1 = 4715.55 \AA vac
|  WAV VAC | SPC   | CONFIGURATION    | TERM   | J_i-J_k |      A_ki | LEVEL ENERGY  CM^-1  |
|----------+-------+------------------+--------+-------+----------+---------------------|
| 6728.141 | O  I] | 2s2.2p3.(4So).3s | 5So-3P | 2 - 2 | 1.04E+03 | 73768.20 - 88631.15 |
| 6728.394 | O  I] | 2s2.2p3.(4So).3s | 5So-3P | 2 - 1 | 4.99E+02 | 73768.20 - 88630.59 |
| 8448.568 | O  I  | 2s2.2p3.(4So).3s | 3So-3P | 1 - 0 | 3.18E+07 | 76794.98 - 88631.30 |
| 8448.680 | O  I  | 2s2.2p3.(4So).3s | 3So-3P | 1 - 2 | 3.18E+07 | 76794.98 - 88631.15 |
| 8449.079 | O I   | 2s2.2p3.(4So).3s | 3So-3P | 1 - 1 | 3.18E+07 | 76794.98 - 88630.59 |

**** From 2s2.2p3.(4So).3s 3S
|    WAV VAC | SPC  | CONFIGURATION | TERM   | J_i-J_k |      A_ki | LEVEL ENERGY  CM^-1 |
|------------+------+---------------+--------+-------+----------+--------------------|
| 1302.16848 | O I  | 2s2.2p4       | 3P-3So |   2-1 | 3.15E+08 |      0.00-76794.98 |
| 1304.85763 | O I  | 2s2.2p4       | 3P-3So |   1-1 | 1.87E+08 |    158.26-76794.98 |
| 1306.02861 | O I  | 2s2.2p4       | 3P-3So |   0-1 | 6.23E+07 |    226.98-76794.98 |
| 1641.30533 | O I] | 2s2.2p4       | 1D-3So |   2-1 | 1.75E+03 |  15867.86-76794.98 |
|  2325.4519 | O I] | 2s2.2p4       | 1S-3So |   0-1 | 6.54E-02 |  33792.58-76794.98 |



* Older stuff which is now beside the point 


** Looking at spectra of stars
+ Is it possible to see the DIB profiles in the stellar spectra?
  + Specifically the 6632.85 feature?

*** Features seen in \theta^1 C (HD 37022)
+ Using UVES dataset ADP.2016-03-11T12:34:33.367 from ESO
  + 6196
    - I see something at 6196.95 but it is supposed to be at 6195.97
    - And there is nothing at 6614, which should be stronger - so no
  + 5780
    - Broad absorption at 5781.649
    - But wavelength not right, should be at 5780.37
    - And we see nothing at 5797
  + 6284
    - Seen clearly
    - I might have got my wavelength wrong before - was using 6278 which is way off
    - Confusion with sky absorption

** Explanations for absorption
*** Summary
1. Really a gap between two weak emission line forests
   - Not consistent with Orion, which shows smooth continuum
2. Stellar absorption line that is scattered
   - Late B stars have the N III 6633.9 line
   - But they also have other lines
     - E.g. O II 6641.031
3. DIB
   - I think this is the most likely
   - Need to compare with 5782 and 6278 bands
     - Those are correlated with reddening
     - But 6634 is not
   - Note that DIBs are thought to be molecular, according to Krełowski:
     #+begin_quote
     The nearly constant positions and nearly unchanged profiles of DIBs, irrespective of the line of sight, point to free gas-phase molecules as the carriers of these bands. [...] 
     #+end_quote
